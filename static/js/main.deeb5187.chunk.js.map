{"version":3,"sources":["serviceWorker.js","components/HomePage/ColorOption/ColorOption.jsx","components/HomePage/ConfirmModal/ConfirmModal.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/ColorBlindButton/ColorBlindButton.jsx","components/LoadingSpinner/LoadingSpinner.jsx","components/ParticlesPage/ParticlesPage.jsx","components/HomePage/HomePage.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/FullPSCardBody/FullPSCardBody.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/PSCard.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSGroup.jsx","components/ParkingInfoPage/Time/Time.jsx","components/ParkingInfoPage/OfflinePage/OfflinePage.jsx","components/ParkingInfoPage/ParkingInfoPage.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ColorOption","state","this","props","color","onClick","handleMouseOver","handleMouseLeave","Fragment","className","colorBlindMode","Button","outline","onMouseOver","onMouseLeave","charAt","toUpperCase","slice","Component","ConfirmModal","Modal","centered","show","showModal","onHide","onModalClose","animation","Header","closeButton","Body","Footer","to","process","variant","onModalConfirm","href","rel","target","serverWarningAlert","Alert","serverDownAlert","class","getServerTextFromProps","type","ColorBlindButton","colorBlindTooltipOpen","toggleColorBlindMode","setState","localStorage","setItem","toggleColorBlindTooltip","mouseHoverColorBlindIcon","mouseLeaveColorBlindIcon","data","getItem","id","Tooltip","placement","isOpen","toggle","LoadingSpinner","textList","index","incrementIndexTimeout","incrementIndex","length","setInterval","clearTimeout","Spinner","role","ParticlesPage","parsedColor","parseColor","prevProps","prevState","parent","console","log","params","fps_limit","interactivity","detect_on","events","onhover","enable","mode","parallax","force","smooth","resize","modes","repulse","distance","duration","particles","value","line_linked","opacity","width","move","attract","rotateX","rotateY","bounce","direction","out_mode","random","speed","straight","number","density","value_area","anim","opacity_min","sync","size","size_min","retina_detect","Home","popoverOpen","togglePopover","handleModalClose","handleModalShow","handleModalConfirm","onlineStatusLoaded","onlineStatus","Popover","innerClassName","trigger","flip","PopoverBody","changeColor","changeColorDefault","onModalShow","FullPSCardBody","Card","style","padding","textAlign","structure","PSCard","currentPermit","spots","level","handleIncrementUpdate","dataArr","spot_change","handleDecrementUpdate","getSpotChangeJSX","isNaN","getParkingStructureLink","PSGroup","structures","ps1","ps3","ps4","handleHTTPGetPS","axios","get","then","res","status","updatePSFromHTTPResponse","catch","err","Object","entries","forEach","element","permit_category","permit","percent_change_past_10_mins","standardizeColorLongToShort","isRelevantColor","push","Number","toFixed","setPSGroupLoadedTrue","colorArr","indexOf","standardizeColorShortToLong","getSortedDataArr","sortedDataArr","map","weightedSpotChange","weightedSpots","weightedColor","score","sort","a","b","range","i","timeUpdated","elapsedTime","ps1DataArr","ps3DataArr","ps4DataArr","Time","updateClientTimerInterval","timerIsLoaded","getTimeText","calculatedTime","updateTimeText","standardizeSecondsToMinutes","ps1TimeText","OfflinePage","ParkingInfo","utc_updated_time","timerLoaded","psGroupLoaded","updateTimeUpdatedInState","time","Date","computeElapsedTime","nowTime","parseInt","handleHTTPGetUpdateTime","updateTimeFromHTTPResponse","handleResetElapsedTime","updateTimeUpdatedInStateInterval","clearInterval","onResetElapsedTime","App","onlineHours","fromHour","toHour","handleChangeColor","handleChangeColorDefault","updateOnlineStatus","checkOnlineStatus","nowHour","getHours","getGreeting","getNightMessage","getMorningMessage","getAfternoonMessage","getEveningMessage","exact","path","HomePage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.deeb5187.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport './ColorOptionStyle.css';\nimport '../../../styles/shared/Colors.css';\n\nclass ColorOption extends Component {\n\tstate = {};\n\n\trender() {\n\t\tconst { color, onClick, handleMouseOver, handleMouseLeave } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{color === 'grey' ? (\n\t\t\t\t\t<div className={color + '-background color-option'}></div>\n\t\t\t\t) : !this.props.colorBlindMode ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\toutline\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={`${color}-color-background color-option pointer border-${color}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)} Permit\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\toutline\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={`${color}-color-background color-blind-option pointer border-${color}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)} Permit\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorOption;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './ConfirmModal.css';\n\nfunction ConfirmModal(props) {\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tcentered={true}\n\t\t\t\tshow={props.showModal}\n\t\t\t\tonHide={props.onModalClose}\n\t\t\t\tanimation={true}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='modal-body-text'>\n\t\t\t\t\t\tYou have {props.color === 'orange' ? 'an' : 'a'} {props.color} permit?\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Link to={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tclassName={props.color + '-button confirm-button'}\n\t\t\t\t\t\t\tonClick={props.onModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className='fas fa-check fa-sm'></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default ConfirmModal;\n","import React, { Component } from 'react';\n\nimport './Footer.css';\n\nclass Footer extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='footer-container'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tMade with <i className='fas fa-heart'></i> by{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tToby\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sub-text'>\n\t\t\t\t\t\tLike the project? A <i className='far fa-star'></i> on the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane/UTD-Parking-Assist'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\trepo\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tis much appeciated :D\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport './Header.css';\n\nclass Header extends Component {\n\tstate = {};\n\n\tserverWarningAlert = () => {\n\t\treturn (\n\t\t\t<Alert variant='warning'>\n\t\t\t\t<i className='fas fa-exclamation-circle fa-lg'></i>\n\t\t\t\t<span>Servers are resting outside of active hours (8AM-8PM EST)</span>\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tserverDownAlert = () => {\n\t\treturn (\n\t\t\t<Alert variant='danger'>\n\t\t\t\t<i class='fas fa-exclamation-triangle fa-lg'></i>\n\t\t\t\t<span>\n\t\t\t\t\tServers are down. I'm either broke or this is unexpected. Kindly{' '}\n\t\t\t\t\t<a href='mailto: tobychow98@gmail.com?subject=UTD Parking Assist: Website Issue'>\n\t\t\t\t\t\tcontact me\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tif it's the latter.\n\t\t\t\t</span>\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tgetServerTextFromProps = () => {\n\t\tconst { type } = this.props;\n\t\tif (type === 'server-warning') {\n\t\t\treturn this.serverWarningAlert();\n\t\t} else if (type === 'server-down') {\n\t\t\treturn this.serverDownAlert();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{' '}\n\t\t\t\t<div className='header-container'> {this.getServerTextFromProps()}</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Tooltip } from 'reactstrap';\n\nimport './ColorBlindButton.css';\n\nclass ColorBlindButton extends Component {\n\tstate = {\n\t\tcolorBlindTooltipOpen: false,\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\ttoggleColorBlindMode = () => {\n\t\tthis.setState({ colorBlindMode: !this.state.colorBlindMode });\n\t\tlocalStorage.setItem('color-blind-status', !this.state.colorBlindMode);\n\t};\n\n\t/* TOOLTIPS */\n\ttoggleColorBlindTooltip = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: !this.state.colorBlindTooltipOpen });\n\t};\n\n\tmouseHoverColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: true });\n\t};\n\n\tmouseLeaveColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: false });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tonClick={this.toggleColorBlindMode}\n\t\t\t\t\tid='color-blind'\n\t\t\t\t\tclassName='color-blind-container pointer'\n\t\t\t\t>\n\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t<i className='fas fa-eye fa-lg'></i>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<i className='fas fa-low-vision fa-lg'></i>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Tooltip\n\t\t\t\t\tplacement='left'\n\t\t\t\t\tisOpen={this.state.colorBlindTooltipOpen}\n\t\t\t\t\ttarget='color-blind'\n\t\t\t\t\ttoggle={this.toggleColorBlindTooltip}\n\t\t\t\t>\n\t\t\t\t\tColor Blind Accessability\n\t\t\t\t</Tooltip>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorBlindButton;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\n\nimport './LoadingSpinner.css';\n\nclass LoadingSpinner extends Component {\n\tstate = {\n\t\ttextList: [\n\t\t\t'Starting Up Car ...',\n\t\t\t'Entering In Drag Race ...',\n\t\t\t'Running Red Lights ...',\n\t\t\t'Taking Up Two Spaces ...',\n\t\t\t\"Almost Done!! Don't Refresh!\",\n\t\t],\n\t\tindex: 0,\n\t\tincrementIndexTimeout: '',\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tincrementIndexTimeout: setInterval(this.incrementIndex, 1500),\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.state.incrementIndexTimeout);\n\t}\n\n\tincrementIndex = () => {\n\t\tconst { textList, index } = this.state;\n\t\tif (index < textList.length - 1) {\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tindex: state.index + 1,\n\t\t\t}));\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { textList, index } = this.state;\n\t\treturn (\n\t\t\t<div className='spinner-container'>\n\t\t\t\t<Spinner animation='border' role='status'></Spinner>\n\t\t\t\t<div className='loading-text'>{textList[index]}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n\nimport './ParticlesPage.css';\n\nclass ParticlesPage extends Component {\n\tstate = { color: '', parsedColor: '' };\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tlet color = '';\n\t\tif (prevProps.parent === 'HomePage') {\n\t\t\tconsole.log('home');\n\t\t\tcolor = 'default';\n\t\t} else {\n\t\t\tconsole.log('other page');\n\t\t\t// other page is parent\n\t\t\tcolor = localStorage.getItem('color');\n\t\t}\n\n\t\tif (prevState.color !== color) {\n\t\t\tthis.setState({ color: color, parsedColor: this.parseColor(color) });\n\t\t}\n\t}\n\n\tparseColor = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'green':\n\t\t\t\treturn '#28a746';\n\t\t\tcase 'gold':\n\t\t\t\treturn '#f9c938';\n\t\t\tcase 'orange':\n\t\t\t\treturn '#ff8c00';\n\t\t\tcase 'purple':\n\t\t\t\treturn '#773dbc';\n\t\t\tdefault:\n\t\t\t\treturn '#c6c6c6'; // grey\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Particles\n\t\t\t\t\tclassName='particles-element'\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tfps_limit: 60,\n\t\t\t\t\t\tinteractivity: {\n\t\t\t\t\t\t\tdetect_on: 'window',\n\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\tonhover: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\tmode: 'repulse',\n\t\t\t\t\t\t\t\t\tparallax: { enable: false, force: 60, smooth: 10 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tresize: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodes: {\n\t\t\t\t\t\t\t\trepulse: { distance: 200, duration: 0.4 },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparticles: {\n\t\t\t\t\t\t\tcolor: { value: this.state.parsedColor },\n\t\t\t\t\t\t\tline_linked: {\n\t\t\t\t\t\t\t\tcolor: this.state.parsedColor,\n\t\t\t\t\t\t\t\tdistance: 150,\n\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\topacity: 0.4,\n\t\t\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmove: {\n\t\t\t\t\t\t\t\tattract: { enable: false, rotateX: 600, rotateY: 1200 },\n\t\t\t\t\t\t\t\tbounce: false,\n\t\t\t\t\t\t\t\tdirection: 'none',\n\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\tout_mode: 'out',\n\t\t\t\t\t\t\t\trandom: false,\n\t\t\t\t\t\t\t\tspeed: 2,\n\t\t\t\t\t\t\t\tstraight: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnumber: { density: { enable: true, value_area: 800 }, value: 80 },\n\t\t\t\t\t\t\topacity: {\n\t\t\t\t\t\t\t\tanim: {\n\t\t\t\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\t\t\t\topacity_min: 0.1,\n\t\t\t\t\t\t\t\t\tspeed: 1,\n\t\t\t\t\t\t\t\t\tsync: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trandom: false,\n\t\t\t\t\t\t\t\tvalue: 0.5,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsize: {\n\t\t\t\t\t\t\t\tanim: { enable: false, size_min: 0.1, speed: 40, sync: false },\n\t\t\t\t\t\t\t\trandom: true,\n\t\t\t\t\t\t\t\tvalue: 5,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tretina_detect: true,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ParticlesPage;\n","import React, { Component } from 'react';\nimport { Popover, PopoverBody } from 'reactstrap';\n\nimport ColorOption from './ColorOption/ColorOption';\nimport ConfirmModal from './ConfirmModal/ConfirmModal';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport ParticlesPage from '../ParticlesPage/ParticlesPage';\n\nimport './HomePageStyle.css';\nimport '../../styles/shared/Colors.css';\n\nclass Home extends Component {\n\t//home\n\tstate = {\n\t\tshowModal: false,\n\t\tcolorBlindMode: false,\n\t\tpopoverOpen: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\t// maintain popover\n\ttogglePopover = () => {\n\t\tthis.setState({ popoverOpen: !this.state.popoverOpen });\n\t};\n\n\t// maintain modal\n\thandleModalClose = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\thandleModalShow = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\thandleModalConfirm = () => {\n\t\tlocalStorage.setItem('color', this.props.color);\n\t\tthis.setState({ showModal: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ParticlesPage parent='HomePage' />\n\t\t\t\t{this.props.onlineStatusLoaded ? '' : <LoadingSpinner />}\n\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t<ColorBlindButton />\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tinnerClassName='popover-content'\n\t\t\t\t\t\t\ttrigger='hover'\n\t\t\t\t\t\t\tplacement='bottom'\n\t\t\t\t\t\t\tisOpen={this.state.popoverOpen}\n\t\t\t\t\t\t\ttarget='info-text'\n\t\t\t\t\t\t\ttoggle={this.togglePopover}\n\t\t\t\t\t\t\tflip={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t<div className='popover-text-container'>\n\t\t\t\t\t\t\t\t\tFor color blind accessibility, select the{' '}\n\t\t\t\t\t\t\t\t\t<i className='fas fa-low-vision'></i> at the top right.\n\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t<p>UTD Permits works on shared tiers:</p>\n\t\t\t\t\t\t\t\t\t<div className='color-access-listings'>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>]\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>\n\t\t\t\t\t\t\t\t\t\t\t{' & '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>]\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='orange'>Orange</span>\n\t\t\t\t\t\t\t\t\t\t\t{' & '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span>]\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t<div className='inner-content-container'>\n\t\t\t\t\t\t\t<h1 className={this.props.color + ' title-greeting'}>UTD Parking</h1>\n\t\t\t\t\t\t\t<div className='sub-title-greeting'>\n\t\t\t\t\t\t\t\t<span>Live parking data at your fingertips</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='color-option-container'>\n\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\tcolor='gold'\n\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\tcolor='orange'\n\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\tcolor='purple'\n\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='bottom-text-container'>\n\t\t\t\t\t\t\t\t<span id='info-text'>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-angle-double-right'></i> But, how does it\n\t\t\t\t\t\t\t\t\twork?\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\t\t\t\tshowModal={this.state.showModal}\n\t\t\t\t\t\t\t\tonModalShow={this.handleModalShow}\n\t\t\t\t\t\t\t\tonModalClose={this.handleModalClose}\n\t\t\t\t\t\t\t\tonModalConfirm={this.handleModalConfirm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t\t<Header type='server-warning'></Header>\n\t\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\t\tinnerClassName='popover-content'\n\t\t\t\t\t\t\t\ttrigger='hover'\n\t\t\t\t\t\t\t\tplacement='bottom'\n\t\t\t\t\t\t\t\tisOpen={this.state.popoverOpen}\n\t\t\t\t\t\t\t\ttarget='info-text'\n\t\t\t\t\t\t\t\ttoggle={this.togglePopover}\n\t\t\t\t\t\t\t\tflip={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t\t<div className='popover-text-container'>\n\t\t\t\t\t\t\t\t\t\tFor color blind accessibility, select the{' '}\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-low-vision'></i> at the top right.\n\t\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t\t<p>UTD Permits works on shared tiers:</p>\n\t\t\t\t\t\t\t\t\t\t<div className='color-access-listings'>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>]\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{' & '}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>]\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span> accesses [\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>,\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='orange'>Orange</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{' & '}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span>]\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t<div className='inner-content-container'>\n\t\t\t\t\t\t\t\t<h1 className={'grey title-greeting'}>UTD Parking</h1>\n\t\t\t\t\t\t\t\t<p className={'grey'}>Live parking data at your fingertips</p>\n\t\t\t\t\t\t\t\t<div className='color-option-container'>\n\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='bottom-text-container grey'>\n\t\t\t\t\t\t\t\t\t<span id='info-text'>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-angle-double-right'></i> But, how does\n\t\t\t\t\t\t\t\t\t\tit work?\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\t\t\t\t\tshowModal={this.state.showModal}\n\t\t\t\t\t\t\t\t\tonModalShow={this.handleModalShow}\n\t\t\t\t\t\t\t\t\tonModalClose={this.handleModalClose}\n\t\t\t\t\t\t\t\t\tonModalConfirm={this.handleModalConfirm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass FullPSCardBody extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<div className='ps-card-body' style={{ padding: '0rem 1.25rem' }}>\n\t\t\t\t\t\t<div className='text' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t<p className='main-text'>FULL</p>\n\t\t\t\t\t\t\t<p className='sub-text'>No available parking spots at this time</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t<p>{this.props.structure}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default FullPSCardBody;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport FullPSCardBody from './FullPSCardBody/FullPSCardBody.jsx';\n\nimport './PSCard.css';\nimport '../../../../styles/shared/Colors.css';\n\nclass PSCard extends Component {\n\tstate = {\n\t\tindex: 0,\n\t\tcurrentPermit: {\n\t\t\tid: -1,\n\t\t\tspots: -1,\n\t\t\tstructure: 'ps1',\n\t\t\tcolor: 'green',\n\t\t\tlevel: -1,\n\t\t},\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\t// initialize current permit\n\t\tif (this.state.currentPermit.id === -1 && this.props.dataArr.length > 0) {\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tcurrentPermit: {\n\t\t\t\t\tid: props.dataArr[0].id,\n\t\t\t\t\tspots: props.dataArr[0].spots,\n\t\t\t\t\tstructure: props.dataArr[0].structure,\n\t\t\t\t\tcolor: props.dataArr[0].color,\n\t\t\t\t\tlevel: props.dataArr[0].level,\n\t\t\t\t\tspot_change: props.dataArr[0].spot_change,\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\n\t\t// get color blind status\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\thandleIncrementUpdate = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tindex: state.index + 1,\n\t\t\tcurrentPermit: {\n\t\t\t\tid: props.dataArr[state.index + 1].id,\n\t\t\t\tspots: props.dataArr[state.index + 1].spots,\n\t\t\t\tstructure: props.dataArr[state.index + 1].structure,\n\t\t\t\tcolor: props.dataArr[state.index + 1].color,\n\t\t\t\tlevel: props.dataArr[state.index + 1].level,\n\t\t\t\tspot_change: props.dataArr[state.index + 1].spot_change,\n\t\t\t},\n\t\t}));\n\t};\n\n\thandleDecrementUpdate = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tindex: state.index - 1,\n\t\t\tcurrentPermit: {\n\t\t\t\tid: props.dataArr[state.index - 1].id,\n\t\t\t\tspots: props.dataArr[state.index - 1].spots,\n\t\t\t\tstructure: props.dataArr[state.index - 1].structure,\n\t\t\t\tcolor: props.dataArr[state.index - 1].color,\n\t\t\t\tlevel: props.dataArr[state.index - 1].level,\n\t\t\t\tspot_change: props.dataArr[state.index - 1].spot_change,\n\t\t\t},\n\t\t}));\n\t};\n\n\tgetSpotChangeJSX = (spot_change) => {\n\t\tif (isNaN(spot_change) || spot_change === 0) {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='grey'>No activity for 10 minutes</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (spot_change > 0) {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='percent-change-green'>+{spot_change}%</span>{' '}\n\t\t\t\t\t\t<span className='grey'>space availability</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='percent-change-red'>{spot_change}%</span> space\n\t\t\t\t\t\tavailability\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tgetParkingStructureLink = (structure) => {\n\t\tif (structure === 'PS1') {\n\t\t\treturn 'https://goo.gl/maps/KHvbiG6WtTbbTKSa9';\n\t\t} else if (structure === 'PS3') {\n\t\t\treturn 'https://goo.gl/maps/kFAHUwgEb1NwTAbv5';\n\t\t} else {\n\t\t\t// 'ps4\n\t\t\treturn 'https://goo.gl/maps/jcU9wcRKYS6MoVuY8';\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { spots, structure, color, level, spot_change } = this.state.currentPermit;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card className='ps-card'>\n\t\t\t\t\t{this.props.dataArr.length !== 0 ? (\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<div className='text-muted ps-card-header'>\n\t\t\t\t\t\t\t\t<div className='best-choice-container'>\n\t\t\t\t\t\t\t\t\t{this.state.index === 0 ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-star'></i> <span>BEST CHOICE</span>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='icon-container'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\thref={this.getParkingStructureLink(structure)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-map-marked-alt fa-lg'></i>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='ps-card-body'>\n\t\t\t\t\t\t\t\t{this.state.index !== 0 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleDecrementUpdate}\n\t\t\t\t\t\t\t\t\t\tclassName='pointer arrow-container'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className='text'>\n\t\t\t\t\t\t\t\t\t<p className='main-text'>{spots} SPACES</p>\n\t\t\t\t\t\t\t\t\t<p className='sub-text'>Level {level}</p>\n\n\t\t\t\t\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t\t\t\t\t<p className={'sub-text border-' + color}>\n\t\t\t\t\t\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p className='sub-text'>\n\t\t\t\t\t\t\t\t\t\t\tColor <i className={'fas fa-circle ' + color}></i>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{this.getSpotChangeJSX(spot_change)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{this.state.index !== this.props.dataArr.length - 1 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleIncrementUpdate}\n\t\t\t\t\t\t\t\t\t\tclassName='arrow-container pointer'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t\t\t<p>{structure}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<FullPSCardBody structure={this.props.structure} />\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSCard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport PSCard from './PSCard/PSCard';\n\nimport './PSGroup.css';\n\nclass PSGroup extends Component {\n\tstate = {\n\t\tstructures: {\n\t\t\tps1: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t},\n\t\tcolor: '',\n\t};\n\n\tcomponentDidMount() {\n\t\tconst data = localStorage.getItem('color');\n\t\tif (data) {\n\t\t\tthis.setState({ color: data });\n\t\t}\n\t\tthis.handleHTTPGetPS();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.props.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleHTTPGetPS();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleHTTPGetPS = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/');\n\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updatePSFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/ ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdatePSFromHTTPResponse = (res) => {\n\t\tlet structures = { ...this.state.structures };\n\n\t\t// reset dataArr for each parking structure\n\t\tObject.entries(structures).forEach((element) => {\n\t\t\telement[1].dataArr = [];\n\t\t});\n\n\t\tres.data.forEach((element) => {\n\t\t\telement.permit_category.forEach((permit) => {\n\t\t\t\tconst { id, level, spots, percent_change_past_10_mins } = permit;\n\t\t\t\tconst color = this.standardizeColorLongToShort(permit.color);\n\n\t\t\t\tif (spots !== 0 && this.isRelevantColor(color)) {\n\t\t\t\t\tstructures[element.structure].dataArr.push({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\tspots: spots,\n\t\t\t\t\t\tstructure: element.structure.toUpperCase(),\n\t\t\t\t\t\tspot_change: Number((percent_change_past_10_mins * 100).toFixed(2)),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.setState({ structures: structures }, this.props.setPSGroupLoadedTrue);\n\t};\n\n\tisRelevantColor = (color) => {\n\t\t// cut array to relavent colors\n\t\tlet colorArr = ['green', 'gold', 'orange', 'purple'];\n\t\tconst index = colorArr.indexOf(this.state.color) + 1;\n\t\tcolorArr = colorArr.slice(0, index);\n\n\t\t// check if color is in array\n\t\treturn colorArr.indexOf(color) > -1;\n\t};\n\n\t// returns standardized color. 'Green Permit' -> 'green'\n\tstandardizeColorLongToShort = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'Green Permit':\n\t\t\t\treturn 'green';\n\t\t\tcase 'Gold Permit':\n\t\t\t\treturn 'gold';\n\t\t\tcase 'Orange Permit':\n\t\t\t\treturn 'orange';\n\t\t\tcase 'Purple Permit':\n\t\t\t\treturn 'purple';\n\t\t\tcase 'Pay-By-Space':\n\t\t\t\treturn 'payBySpace';\n\t\t\tdefault:\n\t\t\t\treturn 'green';\n\t\t}\n\t};\n\n\tstandardizeColorShortToLong = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'green':\n\t\t\t\treturn 'Green%20Permit';\n\t\t\tcase 'gold':\n\t\t\t\treturn 'Gold%20Permit';\n\t\t\tcase 'orange':\n\t\t\t\treturn 'Orange%20Permit';\n\t\t\tcase 'purple':\n\t\t\t\treturn 'Purple%20Permit';\n\t\t\tcase 'pay-by-space':\n\t\t\t\treturn 'Pay-By-Space';\n\t\t\tdefault:\n\t\t\t\treturn 'Green%20Permit';\n\t\t}\n\t};\n\n\tgetSortedDataArr = (dataArr) => {\n\t\tlet sortedDataArr = [...dataArr];\n\n\t\tconst spotsWeight = 0.25;\n\t\tconst colorWeight = 0.35;\n\t\tconst spotChangeWeight = 0.4;\n\n\t\t// assign pref score\n\t\tsortedDataArr = sortedDataArr.map((element) => {\n\t\t\tconst weightedSpotChange = element.spot_change * spotChangeWeight;\n\t\t\tconst weightedSpots = (element.spots / 250) * spotsWeight;\n\n\t\t\tlet weightedColor = 0;\n\t\t\tswitch (element.color) {\n\t\t\t\tcase 'purple':\n\t\t\t\t\tweightedColor = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orange':\n\t\t\t\t\tweightedColor = 0.75;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gold':\n\t\t\t\t\tweightedColor = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'green':\n\t\t\t\t\tweightedColor = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tweightedColor = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tweightedColor *= colorWeight;\n\t\t\treturn { ...element, score: weightedSpots + weightedColor + weightedSpotChange };\n\t\t});\n\n\t\t// sort the array\n\t\tsortedDataArr.sort((a, b) => (a.score < b.score ? 1 : -1));\n\n\t\treturn sortedDataArr;\n\t};\n\n\trender() {\n\t\tconst { ps1, ps3, ps4 } = this.state.structures;\n\n\t\tconst ps1DataArr = this.getSortedDataArr(ps1.dataArr);\n\t\tconst ps3DataArr = this.getSortedDataArr(ps3.dataArr);\n\t\tconst ps4DataArr = this.getSortedDataArr(ps4.dataArr);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='card-group-container'>\n\t\t\t\t\t<PSCard dataArr={ps1DataArr} structure={'PS1'} />\n\t\t\t\t\t<PSCard dataArr={ps3DataArr} structure={'PS3'} />\n\t\t\t\t\t<PSCard dataArr={ps4DataArr} structure={'PS4'} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSGroup;\n","import React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\n\nimport './Time.css';\n\nclass Time extends Component {\n\tstate = {\n\t\tupdateClientTimerInterval: '',\n\t\ttimerIsLoaded: false,\n\t};\n\tgetTimeText = (elapsedTime) => {\n\t\tconst maxTime = 63;\n\t\tif (elapsedTime > maxTime) {\n\t\t\treturn <Alert color='danger'>Something went wrong. Try refreshing the page</Alert>;\n\t\t} else {\n\t\t\tconst calculatedTime = maxTime - elapsedTime;\n\t\t\tconst updateTimeText = this.standardizeSecondsToMinutes(calculatedTime);\n\n\t\t\tif (calculatedTime <= 3 || calculatedTime === 0 || calculatedTime >= 60) {\n\t\t\t\treturn <Alert color='success'>Live update in {updateTimeText}</Alert>;\n\t\t\t} else {\n\t\t\t\treturn <Alert color='warning'>Live update in {updateTimeText}</Alert>;\n\t\t\t}\n\t\t}\n\t};\n\n\tstandardizeSecondsToMinutes = (calculatedTime) => {\n\t\tif (calculatedTime < 60) {\n\t\t\treturn calculatedTime + ' seconds';\n\t\t} else if (calculatedTime === 0 || calculatedTime >= 60) {\n\t\t\t// better ux. change if update is many seconds over minute\n\t\t\treturn 'less than 1 second';\n\t\t}\n\t\treturn '-';\n\t};\n\n\trender() {\n\t\tconst ps1TimeText = this.getTimeText(this.props.timeUpdated.ps1.elapsedTime);\n\t\t// const ps3TimeText = this.getTimeText(this.props.timeUpdated.ps3.elapsedTime);\n\t\t// const ps4TimeText = this.getTimeText(this.props.timeUpdated.ps4.elapsedTime);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='time-text-container'>\n\t\t\t\t\t<div className='time-text'>{ps1TimeText}</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Time;\n","import React, { Component } from 'react';\n\nclass OfflinePage extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>it's offline broooo</h1>\n\t\t\t\t<h3>\n\t\t\t\t\tlike from 8am to 8pm broo <i className='fas fa-heart'></i>\n\t\t\t\t</h3>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default OfflinePage;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n//import ParkingStructureGroup from './ParkingStructureGroupv2/ParkingStructureGroupv2';\nimport ParkingStructureGroup from './PSGroup3.0.0/PSGroup';\nimport Time from './Time/Time';\nimport OfflinePage from './OfflinePage/OfflinePage';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport Footer from '../Footer/Footer';\nimport ParticlesPage from '../ParticlesPage/ParticlesPage';\n\nimport './ParkingInfoPage.css';\n\nclass ParkingInfo extends Component {\n\tstate = {\n\t\ttimeUpdated: {\n\t\t\tps1: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t},\n\t\ttimerLoaded: false,\n\t\tpsGroupLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tupdateTimeUpdatedInStateInterval: setInterval(this.updateTimeUpdatedInState, 1000),\n\t\t});\n\t\tthis.handleHTTPGetUpdateTime();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.updateTimeUpdatedInStateInterval);\n\t}\n\tcomponentDidUpdate() {\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.state.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleResetElapsedTime();\n\t\t\t\tthis.handleHTTPGetUpdateTime();\n\t\t\t}\n\t\t}\n\t}\n\n\t// updates elapsed time in state\n\tupdateTimeUpdatedInState = () => {\n\t\tif (this.props.onlineStatus) {\n\t\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\t\tObject.entries(this.state.timeUpdated).forEach((value) => {\n\t\t\t\tconst structure = value[0];\n\t\t\t\tconst time = new Date(value[1].utc_updated_time);\n\t\t\t\ttimeUpdated[structure].elapsedTime = this.computeElapsedTime(time);\n\t\t\t});\n\n\t\t\tthis.setState({ timeUpdated: timeUpdated, timerLoaded: true });\n\t\t}\n\t};\n\n\tcomputeElapsedTime = (time) => {\n\t\tconst nowTime = new Date();\n\t\treturn parseInt((nowTime - time) / 1000, 10);\n\t};\n\n\thandleHTTPGetUpdateTime = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/timeUpdated');\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures/timeUpdated`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updateTimeFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/timeUpdated ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdateTimeFromHTTPResponse = (res) => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\tObject.entries(res.data).forEach((value) => {\n\t\t\tconst structure = value[0];\n\t\t\tconst time = new Date(value[1]);\n\t\t\ttimeUpdated[structure].utc_updated_time = time;\n\t\t});\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\t// avoid multiple API calls\n\thandleResetElapsedTime = () => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\ttimeUpdated['ps1'].elapsedTime = 0;\n\t\ttimeUpdated['ps3'].elapsedTime = 0;\n\t\ttimeUpdated['ps4'].elapsedTime = 0;\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\tsetPSGroupLoadedTrue = () => {\n\t\tthis.setState({ psGroupLoaded: true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ColorBlindButton />\n\t\t\t\t{this.props.onlineStatusLoaded &&\n\t\t\t\tthis.state.timerLoaded &&\n\t\t\t\tthis.state.psGroupLoaded ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t)}\n\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t<div className='parking-info-container'>\n\t\t\t\t\t\t<ParticlesPage parent='ParkingInfoPage' />\n\n\t\t\t\t\t\t<a href={process.env.PUBLIC_URL + '/'} className='remove-decoration'>\n\t\t\t\t\t\t\t<i className='fas fa-chevron-left back-route-button'></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div className='parking-info-header'>\n\t\t\t\t\t\t\t<div className='centered-header'>\n\t\t\t\t\t\t\t\t<h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\tUTD Parking\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t<div className='sub-title-greeting'>\n\t\t\t\t\t\t\t\t\t<span>Live parking data at your fingertips</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='parking-data'>\n\t\t\t\t\t\t\t<Time timeUpdated={this.state.timeUpdated} />\n\t\t\t\t\t\t\t<ParkingStructureGroup\n\t\t\t\t\t\t\t\tsetPSGroupLoadedTrue={this.setPSGroupLoadedTrue}\n\t\t\t\t\t\t\t\ttimeUpdated={this.state.timeUpdated}\n\t\t\t\t\t\t\t\tonResetElapsedTime={this.handleResetElapsedTime}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='inner-content'>\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<OfflinePage />\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ParkingInfo;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport ParkingInfoPage from './components/ParkingInfoPage/ParkingInfoPage';\n\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tcolor: '',\n\t\tonlineHours: {\n\t\t\tfromHour: '0',\n\t\t\ttoHour: '25',\n\t\t},\n\n\t\tonlineStatus: false,\n\t\tonlineStatusLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tsetInterval(this.updateOnlineStatus, 900);\n\t}\n\n\t// changes color for header\n\thandleChangeColor = (color) => {\n\t\tthis.setState({ color: color });\n\t};\n\n\thandleChangeColorDefault = () => {\n\t\tthis.setState({ color: '' });\n\t};\n\n\t// update time\n\tupdateOnlineStatus = () => {\n\t\tif (this.checkOnlineStatus()) {\n\t\t\tthis.setState({ onlineStatus: true, onlineStatusLoaded: true });\n\t\t} else {\n\t\t\tthis.setState({ onlineStatus: false, onlineStatusLoaded: true });\n\t\t}\n\t};\n\n\tcheckOnlineStatus = () => {\n\t\tconst nowHour = new Date().getHours();\n\t\tconst { fromHour, toHour } = this.state.onlineHours;\n\t\tif (nowHour >= fromHour && nowHour < toHour) {\n\t\t\t// online\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetGreeting = () => {\n\t\tconst nowHour = new Date().getHours();\n\n\t\t// Night: [20-23], [0 or 24 - 5]\n\t\t// Morning: [6-11]\n\t\t// Afternoon: [12-16]\n\t\t// Evening: [17-19] evening\n\t\tif (\n\t\t\t(nowHour >= 20 && nowHour <= 23) ||\n\t\t\t((nowHour === 0 || nowHour === 24) && nowHour <= 5)\n\t\t) {\n\t\t\treturn this.getNightMessage();\n\t\t} else if (nowHour >= 6 && nowHour <= 11) {\n\t\t\treturn this.getMorningMessage();\n\t\t} else if (nowHour >= 12 && nowHour <= 16) {\n\t\t\treturn this.getAfternoonMessage();\n\t\t} else {\n\t\t\treturn this.getEveningMessage();\n\t\t}\n\t};\n\n\t// returns random  message\n\tgetNightMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\tgetMorningMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetAfternoonMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetEveningMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='root-container'>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'}>\n\t\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\t\tchangeColor={this.handleChangeColor}\n\t\t\t\t\t\t\t\tchangeColorDefault={this.handleChangeColorDefault}\n\t\t\t\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t\t\tgetGreeting={this.getGreeting}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t\t<ParkingInfoPage\n\t\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}