{"version":3,"sources":["serviceWorker.js","components/HomePage/ColorOption/ColorOption.jsx","components/HomePage/ConfirmModal/ConfirmModal.jsx","components/HomePage/Footer/Footer.jsx","components/Header/Header.jsx","components/HomePage/HomePage.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/FullPSCardBody/FullPSCardBody.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/PSCard.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSGroup.jsx","components/ParkingInfoPage/Time/Time.jsx","components/ParkingInfoPage/OfflinePage/OfflinePage.jsx","components/ParkingInfoPage/ParkingInfoFooter/ParkingInfoFooter.jsx","components/ParkingInfoPage/ParkingInfoPage.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ColorOption","state","this","props","color","onClick","handleMouseOver","handleMouseLeave","Fragment","className","id","onMouseOver","onMouseLeave","Component","ConfirmModal","Modal","centered","show","showModal","onHide","onModalClose","animation","Header","closeButton","Body","Footer","to","Button","variant","onModalConfirm","href","rel","target","serverWarningAlert","Alert","style","textAlign","serverDownAlert","class","getServerTextFromProps","type","Home","handleModalClose","setState","handleModalShow","handleModalConfirm","localStorage","setItem","changeColorDefault","isLoaded","onlineStatus","changeColor","onModalShow","Spinner","role","FullPSCardBody","Card","padding","structure","PSCard","index","currentPermit","spots","level","handleIncrementIndex","handleDecrementIndex","updateCurrentPermit","dataArr","length","prevProps","prevState","PSGroup","structures","ps1","ps3","ps4","handleHTTPGetPS","console","log","axios","get","process","REACT_APP_API_ENDPOINT","then","res","status","updatePSFromHTTPResponse","catch","err","Object","entries","forEach","element","data","permit_category","permit","standardizeColorLongToShort","isRelevantColor","push","toUpperCase","colorArr","indexOf","slice","standardizeColorShortToLong","getSortedDataArr","preference","sortedDataArr","spotsWeight","colorWeight","map","weightedSpots","weightedColor","score","sort","a","b","getItem","range","i","timeUpdated","elapsedTime","ps1DataArr","ps3DataArr","ps4DataArr","Time","updateClientTimerInterval","getTimeText","ps1TimeText","OfflinePage","ParkingInfoFooter","ParkingInfo","utc_updated_time","updateTimeUpdatedInState","value","time","Date","computeElapsedTime","nowTime","parseInt","handleHTTPGetUpdateTime","updateTimeFromHTTPResponse","handleResetElapsedTime","updateTimeUpdatedInStateInterval","setInterval","clearInterval","isLoadedTimer","onResetElapsedTime","App","updateOnlineStatusInterval","onlineHours","fromHour","toHour","handleChangeColor","handleChangeColorDefault","updateOnlineStatus","checkOnlineStatus","nowHour","getHours","getGreeting","getNightMessage","getMorningMessage","getAfternoonMessage","getEveningMessage","basename","exact","path","HomePage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1cf283ca.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n// import { Tooltip } from \"react-bootstrap\";\n\nimport './ColorOptionStyle.css';\nimport '../../../styles/shared/Colors.css';\n\nclass ColorOption extends Component {\n\tstate = {};\n\n\trender() {\n\t\tconst { color, onClick, handleMouseOver, handleMouseLeave } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{color === 'grey' ? (\n\t\t\t\t\t<div className={color + '-background square'}></div>\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={'Tooltip-' + color}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={color + '-background square pointer'}\n\t\t\t\t\t></div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorOption;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './ConfirmModal.css';\n\nfunction ConfirmModal(props) {\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tcentered={true}\n\t\t\t\tshow={props.showModal}\n\t\t\t\tonHide={props.onModalClose}\n\t\t\t\tanimation={true}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='modal-body-text'>\n\t\t\t\t\t\tYou have {props.color === 'orange' ? 'an' : 'a'} {props.color} permit?\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Link to='/parkinginfopage'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tclassName={props.color + '-button confirm-button'}\n\t\t\t\t\t\t\tonClick={props.onModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className='fas fa-check fa-sm'></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default ConfirmModal;\n","import React, { Component } from 'react';\n\nimport './Footer.css';\n\nclass Footer extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='footer'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tMade with <i className='fas fa-heart'></i> by{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tToby\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport './Header.css';\n\nclass Header extends Component {\n\tstate = {};\n\n\tserverWarningAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='warning'>\n\t\t\t\t<i className='fas fa-exclamation-circle fa-lg'></i>\n\t\t\t\tTo conserve server loads, servers will rest outside of 8:00AM - 8:00PM CST\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tserverDownAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='danger'>\n\t\t\t\t<i class='fas fa-exclamation-triangle fa-lg'></i>\n\t\t\t\tServers are down. I'm either broke or this is unexpected. Kindly{' '}\n\t\t\t\t<a href='mailto: tobychow98@gmail.com?subject=UTD Parking Assist: Website Issue'>\n\t\t\t\t\tcontact me\n\t\t\t\t</a>{' '}\n\t\t\t\tif it's the latter.\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tgetServerTextFromProps = () => {\n\t\tconst { type } = this.props;\n\t\tif (type === 'server-warning') {\n\t\t\treturn this.serverWarningAlert();\n\t\t} else if (type === 'server-down') {\n\t\t\treturn this.serverDownAlert();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='header-container'>{this.getServerTextFromProps()}</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport ColorOption from './ColorOption/ColorOption';\nimport ConfirmModal from './ConfirmModal/ConfirmModal';\nimport Footer from './Footer/Footer';\nimport Header from '../Header/Header';\n\nimport './HomePageStyle.css';\nimport '../../styles/shared/Colors.css';\nimport '../../styles/shared/LoadingSpinner.css';\n\nclass Home extends Component {\n\tstate = {\n\t\tshowModal: false,\n\t};\n\n\thandleModalClose = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\thandleModalShow = (color) => {\n\t\tthis.setState({ showModal: true });\n\t};\n\n\thandleModalConfirm = () => {\n\t\tlocalStorage.setItem('color', this.props.color);\n\t\tthis.setState({ showModal: false });\n\t};\n\n\thandleMouseLeave = () => {\n\t\tif (!this.state.showModal) {\n\t\t\tthis.props.changeColorDefault();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.props.isLoaded ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t\t\t<div className='container homepage-container'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t\t<h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t\tUTD Parking\n\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='gold'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='orange'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='purple'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\t\t\t\t\tshowModal={this.state.showModal}\n\t\t\t\t\t\t\t\t\tonModalShow={this.handleModalShow}\n\t\t\t\t\t\t\t\t\tonModalClose={this.handleModalClose}\n\t\t\t\t\t\t\t\t\tonModalConfirm={this.handleModalConfirm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Header type='server-warning'></Header>\n\t\t\t\t\t\t\t\t<div className='container homepage-container'>\n\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t\t\t<h1 className={'grey title-greeting'}>UTD Parking</h1>\n\t\t\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t<Spinner animation='border' role='status'>\n\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Footer />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass FullPSCardBody extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<div className='ps-card-body' style={{ padding: '0rem 1.25rem' }}>\n\t\t\t\t\t\t<div className='text' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t<p className='main-text'>FULL</p>\n\t\t\t\t\t\t\t<p className='sub-text'>No available parking spots at this time</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t<p>{this.props.structure}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default FullPSCardBody;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport FullPSCardBody from './FullPSCardBody/FullPSCardBody.jsx';\n\nimport './PSCard.css';\nimport '../../../../styles/shared/Colors.css';\n\nclass PSCard extends Component {\n\tstate = {\n\t\tindex: 0,\n\t\tcurrentPermit: {\n\t\t\tid: -1,\n\t\t\tspots: -1,\n\t\t\tstructure: 'ps1',\n\t\t\tcolor: 'green',\n\t\t\tlevel: -1,\n\t\t},\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.index !== this.state.index || prevProps != this.props) {\n\t\t\tthis.updateCurrentPermit();\n\t\t}\n\t}\n\n\thandleIncrementIndex = () => {\n\t\tthis.setState({ index: this.state.index + 1 });\n\t};\n\n\thandleDecrementIndex = () => {\n\t\tthis.setState({ index: this.state.index - 1 });\n\t};\n\n\tupdateCurrentPermit = () => {\n\t\tconst { id, spots, structure, color, level } =\n\t\t\tthis.props.dataArr.length !== 0\n\t\t\t\t? this.props.dataArr[this.state.index]\n\t\t\t\t: { id: -1, spots: -1, color: 'green', level: -1 };\n\n\t\tthis.setState({\n\t\t\tcurrentPermit: {\n\t\t\t\tid: id,\n\t\t\t\tspots: spots,\n\t\t\t\tstructure: structure,\n\t\t\t\tcolor: color,\n\t\t\t\tlevel: level,\n\t\t\t},\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { id, spots, structure, color, level } = this.state.currentPermit;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card className='ps-card'>\n\t\t\t\t\t{this.props.dataArr.length !== 0 ? (\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t{this.state.index === 0 ? (\n\t\t\t\t\t\t\t\t<div className='text-muted ps-card-header'>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-star'></i> Recommended Choice\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div className='ps-card-body'>\n\t\t\t\t\t\t\t\t{this.state.index !== 0 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleDecrementIndex}\n\t\t\t\t\t\t\t\t\t\tclassName='pointer arrow-container'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className='text'>\n\t\t\t\t\t\t\t\t\t<p className='main-text'>{spots} SPOTS</p>\n\t\t\t\t\t\t\t\t\t<p className='sub-text'>Level {level}</p>\n\t\t\t\t\t\t\t\t\t<p className='sub-text'>\n\t\t\t\t\t\t\t\t\t\tColor <i className={'fas fa-circle ' + color}></i>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{this.state.index !== this.props.dataArr.length - 1 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleIncrementIndex}\n\t\t\t\t\t\t\t\t\t\tclassName='arrow-container pointer'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t\t\t<p>{structure}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<FullPSCardBody structure={this.props.structure} />\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSCard;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport axios from 'axios';\n\nimport PSCard from './PSCard/PSCard';\n\nimport './PSGroup.css';\n\nclass PSGroup extends Component {\n\tstate = {\n\t\tstructures: {\n\t\t\tps1: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t},\n\t\tisLoaded: false,\n\t\tcolor: '',\n\t};\n\n\tcomponentDidMount() {\n\t\tconst data = localStorage.getItem('color');\n\t\tif (data) {\n\t\t\tthis.setState({ color: data });\n\t\t}\n\t\tthis.handleHTTPGetPS();\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// 63 64 65 66\n\t\t// inclusive\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.props.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleHTTPGetPS();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleHTTPGetPS = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/');\n\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updatePSFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/ ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdatePSFromHTTPResponse = (res) => {\n\t\tlet structures = { ...this.state.structures };\n\n\t\t// reset dataArr for each parking structure\n\t\tObject.entries(structures).forEach((element) => {\n\t\t\telement[1].dataArr = [];\n\t\t});\n\n\t\tres.data.forEach((element) => {\n\t\t\telement.permit_category.forEach((permit) => {\n\t\t\t\tconst { id, level, spots } = permit;\n\t\t\t\tconst color = this.standardizeColorLongToShort(permit.color);\n\n\t\t\t\tif (spots !== 0 && this.isRelevantColor(color)) {\n\t\t\t\t\tstructures[element.structure].dataArr.push({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\tspots: spots,\n\t\t\t\t\t\tstructure: element.structure.toUpperCase(),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.setState({ structures: structures });\n\t\tthis.setState({ isLoaded: true });\n\t};\n\n\tisRelevantColor = (color) => {\n\t\t// cut array to relavent colors\n\t\tlet colorArr = ['green', 'gold', 'orange', 'purple'];\n\t\tconst index = colorArr.indexOf(this.state.color) + 1;\n\t\tcolorArr = colorArr.slice(0, index);\n\n\t\t// check if color is in array\n\t\treturn colorArr.indexOf(color) > -1;\n\t};\n\n\t// returns standardized color. 'Green Permit' -> 'green'\n\tstandardizeColorLongToShort = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'Green Permit':\n\t\t\t\treturn 'green';\n\t\t\tcase 'Gold Permit':\n\t\t\t\treturn 'gold';\n\t\t\tcase 'Orange Permit':\n\t\t\t\treturn 'orange';\n\t\t\tcase 'Purple Permit':\n\t\t\t\treturn 'purple';\n\t\t\tcase 'Pay-By-Space':\n\t\t\t\treturn 'payBySpace';\n\t\t\tdefault:\n\t\t\t\treturn 'green';\n\t\t}\n\t};\n\n\tstandardizeColorShortToLong = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'green':\n\t\t\t\treturn 'Green%20Permit';\n\t\t\tcase 'gold':\n\t\t\t\treturn 'Gold%20Permit';\n\t\t\tcase 'orange':\n\t\t\t\treturn 'Orange%20Permit';\n\t\t\tcase 'purple':\n\t\t\t\treturn 'Purple%20Permit';\n\t\t\tcase 'pay-by-space':\n\t\t\t\treturn 'Pay-By-Space';\n\t\t\tdefault:\n\t\t\t\treturn 'Green%20Permit';\n\t\t}\n\t};\n\n\tgetSortedDataArr = (dataArr, preference) => {\n\t\tlet sortedDataArr = [...dataArr];\n\n\t\t// preference can be 'spots' or 'color'\n\t\tconst spotsWeight = preference === 'spots' ? 0.55 : 0.45;\n\t\tconst colorWeight = 1 - spotsWeight;\n\n\t\t// assign pref score\n\t\tsortedDataArr = sortedDataArr.map((element) => {\n\t\t\tconst weightedSpots = (element.spots / 250) * spotsWeight;\n\t\t\tlet weightedColor = 0;\n\t\t\tswitch (element.color) {\n\t\t\t\tcase 'purple':\n\t\t\t\t\tweightedColor = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orange':\n\t\t\t\t\tweightedColor = 0.75;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gold':\n\t\t\t\t\tweightedColor = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'green':\n\t\t\t\t\tweightedColor = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tweightedColor *= colorWeight;\n\t\t\treturn { ...element, score: weightedSpots + weightedColor };\n\t\t});\n\n\t\t// sort the array\n\t\tsortedDataArr.sort((a, b) => (a.score < b.score ? 1 : -1));\n\n\t\treturn sortedDataArr;\n\t};\n\n\trender() {\n\t\tconst { ps1, ps3, ps4 } = this.state.structures;\n\n\t\tconst ps1DataArr = this.getSortedDataArr(ps1.dataArr, 'spots');\n\t\tconst ps3DataArr = this.getSortedDataArr(ps3.dataArr, 'spots');\n\t\tconst ps4DataArr = this.getSortedDataArr(ps4.dataArr, 'spots');\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.isLoaded ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='card-group-container'>\n\t\t\t\t\t\t\t<PSCard dataArr={ps1DataArr} structure={'PS1'} />\n\t\t\t\t\t\t\t<PSCard dataArr={ps3DataArr} structure={'PS3'} />\n\t\t\t\t\t\t\t<PSCard dataArr={ps4DataArr} structure={'PS4'} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t<Spinner animation='border' role='status'>\n\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSGroup;\n","import React, { Component } from 'react';\n\nimport './Time.css';\n\nclass Time extends Component {\n\tstate = {\n\t\tupdateClientTimerInterval: '',\n\t};\n\tgetTimeText = (elapsedTime) => {\n\t\tif (elapsedTime <= 1) {\n\t\t\treturn 'Updated a second ago';\n\t\t} else if (elapsedTime > 1 && elapsedTime < 60) {\n\t\t\treturn 'Updated ' + elapsedTime + ' seconds ago';\n\t\t} else if (elapsedTime === 60) {\n\t\t\treturn 'Updated a minute ago';\n\t\t} else if (elapsedTime > 60 && elapsedTime < 119) {\n\t\t\tconst calcElapsedTime = elapsedTime - 60;\n\t\t\treturn 'Updated a minute and ' + calcElapsedTime + ' seconds ago';\n\t\t} else if (elapsedTime >= 120) {\n\t\t\t// 2 minutes\n\t\t\treturn 'Updated a few minutes ago';\n\t\t}\n\t};\n\n\trender() {\n\t\tconst ps1TimeText = this.getTimeText(this.props.timeUpdated.ps1.elapsedTime);\n\t\t// const ps3TimeText = this.getTimeText(this.props.timeUpdated.ps3.elapsedTime);\n\t\t// const ps4TimeText = this.getTimeText(this.props.timeUpdated.ps4.elapsedTime);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='time-text-container'>\n\t\t\t\t\t<div className='time-text'>{ps1TimeText}</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Time;\n","import React, { Component } from 'react';\n\nclass OfflinePage extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>it's offline broooo</h1>\n\t\t\t\t<h3>\n\t\t\t\t\tlike from 8am to 8pm broo <i className='fas fa-heart'></i>\n\t\t\t\t</h3>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default OfflinePage;\n","import React, { Component } from 'react';\n\nimport './ParkingInfoFooter.css';\n\nclass ParkingInfoFooter extends Component {\n\tstate = {};\n\trender() {\n\t\treturn <React.Fragment></React.Fragment>;\n\t}\n}\n\nexport default ParkingInfoFooter;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n//import ParkingStructureGroup from './ParkingStructureGroupv2/ParkingStructureGroupv2';\nimport ParkingStructureGroup from './PSGroup3.0.0/PSGroup';\nimport Time from './Time/Time';\nimport OfflinePage from './OfflinePage/OfflinePage';\nimport ParkingInfoFooter from './ParkingInfoFooter/ParkingInfoFooter';\nimport Header from '../Header/Header';\n\nimport '../../styles/shared/LoadingSpinner.css';\nimport './ParkingInfoPage.css';\n\nclass ParkingInfo extends Component {\n\tstate = {\n\t\ttimeUpdated: {\n\t\t\tps1: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: 0,\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: 0,\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: 0,\n\t\t\t},\n\t\t},\n\t};\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tupdateTimeUpdatedInStateInterval: setInterval(this.updateTimeUpdatedInState, 1000),\n\t\t});\n\t\tthis.handleHTTPGetUpdateTime();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.updateTimeUpdatedInStateInterval);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// 63 64 65 66\n\t\t// inclusive\n\t\tconst range = [62, 63];\n\t\t// 63, 64 working well 4/14 7:30~\n\t\t// 62, 63 working well 4/14 7:30~\n\t\t// 61, 62 working for most part. extremely minor hiccup 4/14 8:00~\n\t\t// 80 requests: 2 hiccups\n\t\t// 62, 63 working well 4/14 8:40~\n\t\t// 80 requests: NO hiccups\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.state.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleResetElapsedTime();\n\t\t\t\tthis.handleHTTPGetUpdateTime();\n\t\t\t}\n\t\t}\n\t}\n\n\t// updates elapsed time in state\n\tupdateTimeUpdatedInState = () => {\n\t\tif (this.props.onlineStatus) {\n\t\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\t\tObject.entries(this.state.timeUpdated).forEach((value) => {\n\t\t\t\tconst structure = value[0];\n\t\t\t\tconst time = new Date(value[1].utc_updated_time);\n\t\t\t\ttimeUpdated[structure].elapsedTime = this.computeElapsedTime(time);\n\t\t\t});\n\n\t\t\tthis.setState({ timeUpdated: timeUpdated });\n\t\t}\n\t};\n\n\tcomputeElapsedTime = (time) => {\n\t\tconst nowTime = new Date();\n\t\treturn parseInt((nowTime - time) / 1000, 10);\n\t};\n\n\thandleHTTPGetUpdateTime = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/timeUpdated');\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures/timeUpdated`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updateTimeFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/timeUpdated ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdateTimeFromHTTPResponse = (res) => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\tObject.entries(res.data).forEach((value) => {\n\t\t\tconst structure = value[0];\n\t\t\tconst time = new Date(value[1]);\n\t\t\ttimeUpdated[structure].utc_updated_time = time;\n\t\t});\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\t// avoid multiple API calls\n\thandleResetElapsedTime = () => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\ttimeUpdated['ps1'].elapsedTime = 0;\n\t\ttimeUpdated['ps3'].elapsedTime = 0;\n\t\ttimeUpdated['ps4'].elapsedTime = 0;\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='parking-info-page-container'>\n\t\t\t\t\t{this.props.isLoaded ? (\n\t\t\t\t\t\tthis.props.onlineStatus ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div className='parking-info-container'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={process.env.PUBLIC_URL + '/'}\n\t\t\t\t\t\t\t\t\t\tclassName='remove-decoration'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-chevron-left back-route-button'></i>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<Time\n\t\t\t\t\t\t\t\t\t\ttimeUpdated={this.state.timeUpdated}\n\t\t\t\t\t\t\t\t\t\tisLoadedTimer={this.state.isLoadedTimer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ParkingStructureGroup\n\t\t\t\t\t\t\t\t\t\ttimeUpdated={this.state.timeUpdated}\n\t\t\t\t\t\t\t\t\t\tonResetElapsedTime={this.handleResetElapsedTime}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ParkingInfoFooter />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<OfflinePage />\n\t\t\t\t\t\t)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t\t<Spinner animation='border' role='status'>\n\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ParkingInfo;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport ParkingInfoPage from './components/ParkingInfoPage/ParkingInfoPage';\n\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tcolor: '',\n\t\tupdateOnlineStatusInterval: '',\n\t\tonlineHours: {\n\t\t\tfromHour: '8',\n\t\t\ttoHour: '25',\n\t\t},\n\n\t\tonlineStatus: false,\n\t\tisLoaded: false,\n\t};\n\tcomponentDidMount() {\n\t\tthis.setState({ updateOnlineStatusInterval: setInterval(this.updateOnlineStatus, 900) });\n\t}\n\n\t// permit color\n\thandleChangeColor = (color) => {\n\t\tthis.setState({ color: color });\n\t};\n\n\thandleChangeColorDefault = () => {\n\t\tthis.setState({ color: '' });\n\t};\n\n\t// update time\n\tupdateOnlineStatus = () => {\n\t\tif (this.checkOnlineStatus()) {\n\t\t\tthis.setState({ onlineStatus: true });\n\t\t} else {\n\t\t\tthis.setState({ onlineStatus: false });\n\t\t}\n\t\tthis.setState({ isLoaded: true });\n\t};\n\n\tcheckOnlineStatus = () => {\n\t\tconst nowHour = new Date().getHours();\n\t\tconst { fromHour, toHour } = this.state.onlineHours;\n\t\tif (nowHour >= fromHour && nowHour < toHour) {\n\t\t\t// online\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetGreeting = () => {\n\t\tconst nowHour = new Date().getHours();\n\n\t\t// Night: [20-23], [0 or 24 - 5]\n\t\t// Morning: [6-11]\n\t\t// Afternoon: [12-16]\n\t\t// Evening: [17-19] evening\n\t\tif (\n\t\t\t(nowHour >= 20 && nowHour <= 23) ||\n\t\t\t((nowHour === 0 || nowHour === 24) && nowHour <= 5)\n\t\t) {\n\t\t\treturn this.getNightMessage();\n\t\t} else if (nowHour >= 6 && nowHour <= 11) {\n\t\t\treturn this.getMorningMessage();\n\t\t} else if (nowHour >= 12 && nowHour <= 16) {\n\t\t\treturn this.getAfternoonMessage();\n\t\t} else {\n\t\t\treturn this.getEveningMessage();\n\t\t}\n\t};\n\n\t// returns random  message\n\tgetNightMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\tgetMorningMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetAfternoonMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetEveningMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tchangeColor={this.handleChangeColor}\n\t\t\t\t\t\t\tchangeColorDefault={this.handleChangeColorDefault}\n\t\t\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t\t\t\tisLoaded={this.state.isLoaded}\n\t\t\t\t\t\t\tgetGreeting={this.getGreeting}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/parkingInfoPage'>\n\t\t\t\t\t\t<ParkingInfoPage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tisLoaded={this.state.isLoaded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}