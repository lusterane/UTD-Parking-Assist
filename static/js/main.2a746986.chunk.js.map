{"version":3,"sources":["serviceWorker.js","components/HomePage/ColorOption/ColorOption.jsx","components/HomePage/ConfirmModal/ConfirmModal.jsx","components/HomePage/Footer/Footer.jsx","components/Header/Header.jsx","components/ColorBlindButton/ColorBlindButton.jsx","components/HomePage/HomePage.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/FullPSCardBody/FullPSCardBody.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/PSCard.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSGroup.jsx","components/ParkingInfoPage/Time/Time.jsx","components/ParkingInfoPage/OfflinePage/OfflinePage.jsx","components/ParkingInfoPage/ParkingInfoFooter/ParkingInfoFooter.jsx","components/ParkingInfoPage/ParkingInfoPage.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ColorOption","state","this","props","color","onClick","handleMouseOver","handleMouseLeave","Fragment","className","style","colorBlindMode","Button","outline","onMouseOver","onMouseLeave","charAt","toUpperCase","slice","type","Component","ConfirmModal","Modal","centered","show","showModal","onHide","onModalClose","animation","Header","closeButton","Body","Footer","to","process","variant","onModalConfirm","href","rel","target","serverWarningAlert","Alert","textAlign","serverDownAlert","class","getServerTextFromProps","ColorBlindButton","colorBlindTooltipOpen","toggleColorBlindMode","setState","localStorage","setItem","toggleColorBlindTooltip","mouseHoverColorBlindIcon","mouseLeaveColorBlindIcon","data","getItem","id","Tooltip","placement","isOpen","toggle","Home","popoverOpen","togglePopover","handleModalClose","handleModalShow","handleModalConfirm","onlineStatusLoaded","Spinner","role","onlineStatus","Popover","innerClassName","trigger","flip","PopoverBody","changeColor","changeColorDefault","onModalShow","FullPSCardBody","Card","padding","structure","PSCard","index","currentPermit","spots","level","handleIncrementUpdate","dataArr","spot_change","handleDecrementUpdate","getSpotChangeJSX","isNaN","getParkingStructureLink","length","PSGroup","structures","ps1","ps3","ps4","handleHTTPGetPS","console","log","axios","get","then","res","status","updatePSFromHTTPResponse","catch","err","Object","entries","forEach","element","permit_category","permit","percent_change_past_10_mins","standardizeColorLongToShort","isRelevantColor","push","Number","toFixed","setPSGroupLoadedTrue","colorArr","indexOf","standardizeColorShortToLong","getSortedDataArr","sortedDataArr","map","weightedSpotChange","weightedSpots","weightedColor","score","sort","a","b","range","i","timeUpdated","elapsedTime","ps1DataArr","ps3DataArr","ps4DataArr","Time","updateClientTimerInterval","timerIsLoaded","getTimeText","calculatedTime","updateTimeText","standardizeSecondsToMinutes","ps1TimeText","OfflinePage","ParkingInfoFooter","ParkingInfo","utc_updated_time","timerLoaded","psGroupLoaded","updateTimeUpdatedInState","value","time","Date","computeElapsedTime","nowTime","parseInt","handleHTTPGetUpdateTime","updateTimeFromHTTPResponse","handleResetElapsedTime","updateTimeUpdatedInStateInterval","setInterval","clearInterval","onResetElapsedTime","App","onlineHours","fromHour","toHour","handleChangeColor","handleChangeColorDefault","updateOnlineStatus","checkOnlineStatus","nowHour","getHours","getGreeting","getNightMessage","getMorningMessage","getAfternoonMessage","getEveningMessage","exact","path","HomePage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"wXAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oFCkDSC,G,wNA7DdC,MAAQ,G,uDAEE,IAAD,EACsDC,KAAKC,MAA3DC,EADA,EACAA,MAAOC,EADP,EACOA,QAASC,EADhB,EACgBA,gBAAiBC,EADjC,EACiCA,iBAEzC,OACC,kBAAC,IAAMC,SAAP,KACY,SAAVJ,EACA,yBAAKK,UAAWL,EAAQ,4BACvB,uBAAGK,UAAU,kBAAkBC,MAAO,CAAEN,MAAO,WAE7CF,KAAKC,MAAMQ,eACd,kBAACC,EAAA,EAAD,CACCC,SAAO,EACPT,MAAM,YACNC,QAAS,WACRA,EAAQD,IAETU,YAAa,WACZR,EAAgBF,IAEjBW,aAAc,WACbR,KAEDE,UACCL,EACA,6DACAA,GAGAA,EAAMY,OAAO,GAAGC,cAAgBb,EAAMc,MAAM,GAlB9C,WAqBA,kBAACN,EAAA,EAAD,CACCC,SAAO,EACPM,KAAK,SACLf,MAAM,YACNC,QAAS,WACRA,EAAQD,IAETU,YAAa,WACZR,EAAgBF,IAEjBW,aAAc,WACbR,KAEDE,UAAWL,EAAQ,4BAOnB,uBAAGK,UAAU,0B,GAtDOW,c,wBC+BXC,MA/Bf,SAAsBlB,GACrB,OACC,oCACC,kBAACmB,EAAA,EAAD,CACCC,UAAU,EACVC,KAAMrB,EAAMsB,UACZC,OAAQvB,EAAMwB,aACdC,WAAW,GAEX,kBAACN,EAAA,EAAMO,OAAP,CAAcC,aAAW,IACzB,kBAACR,EAAA,EAAMS,KAAP,KACC,yBAAKtB,UAAU,mBAAf,YAC2B,WAAhBN,EAAMC,MAAqB,KAAO,IAD7C,IACmDD,EAAMC,MADzD,aAID,kBAACkB,EAAA,EAAMU,OAAP,KACC,kBAAC,IAAD,CAAMC,GAAIC,uCACT,kBAAC,IAAD,CACCC,QAAQ,UACR1B,UAAWN,EAAMC,MAAQ,yBACzBC,QAASF,EAAMiC,gBAEf,uBAAG3B,UAAU,6BCULuB,G,kNAjCd/B,MAAQ,G,uDAEP,OACC,kBAAC,IAAMO,SAAP,KACC,yBAAKC,UAAU,UACd,wCACW,uBAAGA,UAAU,iBADxB,MAC+C,IAC9C,uBACC4B,KAAK,+BACLC,IAAI,sBACJC,OAAO,UAHR,QAFD,KAWA,uBAAG9B,UAAU,YAAb,uBACqB,uBAAGA,UAAU,gBADlC,UAC4D,IAC3D,uBACC4B,KAAK,kDACLC,IAAI,sBACJC,OAAO,UAHR,QAMK,IARN,+B,GAjBgBnB,c,SC4CNS,G,mNA1Cd5B,MAAQ,G,EAERuC,mBAAqB,WACpB,OACC,kBAACC,EAAA,EAAD,CAAO/B,MAAO,CAAEgC,UAAW,UAAYP,QAAQ,WAC9C,uBAAG1B,UAAU,oCADd,+E,EAOFkC,gBAAkB,WACjB,OACC,kBAACF,EAAA,EAAD,CAAO/B,MAAO,CAAEgC,UAAW,UAAYP,QAAQ,UAC9C,uBAAGS,MAAM,sCADV,mEAEkE,IACjE,uBAAGP,KAAK,0EAAR,cAEK,IALN,wB,EAWFQ,uBAAyB,WAAO,IACvB1B,EAAS,EAAKhB,MAAdgB,KACR,MAAa,mBAATA,EACI,EAAKqB,qBACO,gBAATrB,EACH,EAAKwB,uBADN,G,uDAMP,OACC,kBAAC,IAAMnC,SAAP,KACC,yBAAKC,UAAU,oBAAoBP,KAAK2C,+B,GArCvBzB,c,SC0DN0B,G,mNAzDd7C,MAAQ,CACP8C,uBAAuB,EACvBpC,gBAAgB,G,EAWjBqC,qBAAuB,WACtB,EAAKC,SAAS,CAAEtC,gBAAiB,EAAKV,MAAMU,iBAC5CuC,aAAaC,QAAQ,sBAAuB,EAAKlD,MAAMU,iB,EAIxDyC,wBAA0B,WACzB,EAAKH,SAAS,CAAEF,uBAAwB,EAAK9C,MAAM8C,yB,EAGpDM,yBAA2B,WAC1B,EAAKJ,SAAS,CAAEF,uBAAuB,K,EAGxCO,yBAA2B,WAC1B,EAAKL,SAAS,CAAEF,uBAAuB,K,mEAtBvC,IAAMQ,EAAsD,SAA/CL,aAAaM,QAAQ,sBAE9BtD,KAAKD,MAAMU,iBAAmB4C,GACjCrD,KAAK+C,SAAS,CAAEtC,eAAgB4C,M,+BAsBjC,OACC,kBAAC,IAAM/C,SAAP,KACC,yBACCH,QAASH,KAAK8C,qBACdS,GAAG,cACHhD,UAAU,iCAETP,KAAKD,MAAMU,eACX,uBAAGF,UAAU,qBAEb,uBAAGA,UAAU,6BAGf,kBAACiD,EAAA,EAAD,CACCC,UAAU,OACVC,OAAQ1D,KAAKD,MAAM8C,sBACnBR,OAAO,cACPsB,OAAQ3D,KAAKkD,yBAJd,kC,GA7C2BhC,cC6OhB0C,G,yNAnOd7D,MAAQ,CACPwB,WAAW,EACXd,gBAAgB,EAChBoD,aAAa,G,EAWdC,cAAgB,kBAAM,EAAKf,SAAS,CAAEc,aAAc,EAAK9D,MAAM8D,e,EAG/DE,iBAAmB,WAClB,EAAKhB,SAAS,CAAExB,WAAW,K,EAE5ByC,gBAAkB,WACjB,EAAKjB,SAAS,CAAExB,WAAW,K,EAE5B0C,mBAAqB,WACpBjB,aAAaC,QAAQ,QAAS,EAAKhD,MAAMC,OACzC,EAAK6C,SAAS,CAAExB,WAAW,K,mEAlB3B,IAAM8B,EAAsD,SAA/CL,aAAaM,QAAQ,sBAE9BtD,KAAKD,MAAMU,iBAAmB4C,GACjCrD,KAAK+C,SAAS,CAAEtC,eAAgB4C,M,+BAkBxB,IAAD,OACR,OACC,kBAAC,IAAM/C,SAAP,KACEN,KAAKC,MAAMiE,mBACX,GAEA,yBAAK3D,UAAU,qBACd,kBAAC4D,EAAA,EAAD,CAASzC,UAAU,SAAS0C,KAAK,YAGlCpE,KAAKC,MAAMoE,aACX,oCACC,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CACCC,eAAe,kBACfC,QAAQ,QACRf,UAAU,SACVC,OAAQ1D,KAAKD,MAAM8D,YACnBxB,OAAO,YACPsB,OAAQ3D,KAAK8D,cACbW,MAAM,GAEN,kBAACC,EAAA,EAAD,KACC,yBAAKnE,UAAU,0BAAf,yCACwC,IACvC,uBAAGA,UAAU,sBAFd,qBAGC,6BACA,iEACA,yBAAKA,UAAU,yBACd,2BACC,0BAAMA,UAAU,SAAhB,SADD,YAC+C,IAC9C,0BAAMA,UAAU,SAAhB,UAED,2BACC,0BAAMA,UAAU,QAAhB,QADD,YAC6C,IAC5C,0BAAMA,UAAU,SAAhB,SAFD,OAE0C,IACzC,0BAAMA,UAAU,QAAhB,SAED,2BACC,0BAAMA,UAAU,UAAhB,UADD,YACiD,IAChD,0BAAMA,UAAU,SAAhB,SAFD,IAGC,0BAAMA,UAAU,QAAhB,QAHD,IAIC,0BAAMA,UAAU,UAAhB,UAJD,OAI4C,IAC3C,0BAAMA,UAAU,UAAhB,eAML,yBAAKA,UAAU,qBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,OACd,wBAAIA,UAAWP,KAAKC,MAAMC,MAAQ,mBAAlC,eAGA,mEAKA,yBAAKK,UAAU,OACd,kBAAC,EAAD,CACCL,MAAM,QACNO,eAAgBT,KAAKD,MAAMU,eAC3BN,QAAS,WACR,EAAK6D,gBAAgB,EAAK/D,MAAMC,QAEjCE,gBAAiBJ,KAAKC,MAAM0E,YAC5BtE,iBAAkB,WACZ,EAAKN,MAAMwB,WACf,EAAKtB,MAAM2E,wBAId,kBAAC,EAAD,CACC1E,MAAM,OACNO,eAAgBT,KAAKD,MAAMU,eAC3BN,QAAS,WACR,EAAK6D,gBAAgB,EAAK/D,MAAMC,QAEjCE,gBAAiBJ,KAAKC,MAAM0E,YAC5BtE,iBAAkB,WACZ,EAAKN,MAAMwB,WACf,EAAKtB,MAAM2E,wBAId,kBAAC,EAAD,CACC1E,MAAM,SACNO,eAAgBT,KAAKD,MAAMU,eAC3BN,QAAS,WACR,EAAK6D,gBAAgB,EAAK/D,MAAMC,QAEjCE,gBAAiBJ,KAAKC,MAAM0E,YAC5BtE,iBAAkB,WACZ,EAAKN,MAAMwB,WACf,EAAKtB,MAAM2E,wBAId,kBAAC,EAAD,CACC1E,MAAM,SACNO,eAAgBT,KAAKD,MAAMU,eAC3BN,QAAS,WACR,EAAK6D,gBAAgB,EAAK/D,MAAMC,QAEjCE,gBAAiBJ,KAAKC,MAAM0E,YAC5BtE,iBAAkB,WACZ,EAAKN,MAAMwB,WACf,EAAKtB,MAAM2E,2BAOjB,yBAAKrB,GAAG,YAAYhD,UAAU,mBAC7B,yBAAKA,UAAU,OACd,uDAGF,kBAAC,EAAD,CACCL,MAAOF,KAAKC,MAAMC,MAClBqB,UAAWvB,KAAKD,MAAMwB,UACtBsD,YAAa7E,KAAKgE,gBAClBvC,aAAczB,KAAK+D,iBACnB7B,eAAgBlC,KAAKiE,uBAKxB,kBAAC,IAAM3D,SAAP,KACC,kBAAC,EAAD,CAAQW,KAAK,mBACb,kBAACqD,EAAA,EAAD,CACCC,eAAe,kBACfC,QAAQ,QACRf,UAAU,SACVC,OAAQ1D,KAAKD,MAAM8D,YACnBxB,OAAO,YACPsB,OAAQ3D,KAAK8D,cACbW,MAAM,GAEN,kBAACC,EAAA,EAAD,KACC,yBAAKnE,UAAU,0BAAf,yCACwC,IACvC,uBAAGA,UAAU,sBAFd,qBAGC,6BACA,iEACA,yBAAKA,UAAU,yBACd,2BACC,0BAAMA,UAAU,SAAhB,SADD,YAC+C,IAC9C,0BAAMA,UAAU,SAAhB,UAED,2BACC,0BAAMA,UAAU,QAAhB,QADD,YAC6C,IAC5C,0BAAMA,UAAU,SAAhB,SAFD,OAE0C,IACzC,0BAAMA,UAAU,QAAhB,SAED,2BACC,0BAAMA,UAAU,UAAhB,UADD,YACiD,IAChD,0BAAMA,UAAU,SAAhB,SAFD,IAGC,0BAAMA,UAAU,QAAhB,QAHD,IAIC,0BAAMA,UAAU,UAAhB,UAJD,OAI4C,IAC3C,0BAAMA,UAAU,UAAhB,eAML,yBAAKA,UAAU,qBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,OACd,wBAAIA,UAAW,uBAAf,eAIA,uBAAGA,UAAW,QAAd,wCACA,yBAAKA,UAAU,OACd,kBAAC,EAAD,CAAaL,MAAM,SACnB,kBAAC,EAAD,CAAaA,MAAM,SACnB,kBAAC,EAAD,CAAaA,MAAM,SACnB,kBAAC,EAAD,CAAaA,MAAM,YAItB,yBAAKqD,GAAG,YAAYhD,UAAU,wBAC7B,yBAAKA,UAAU,OACd,yDAML,kBAAC,EAAD,W,GA/NeW,c,0CCYJ4D,E,4MArBd/E,MAAQ,G,uDAEP,OACC,kBAAC,IAAMO,SAAP,KACC,kBAACyE,EAAA,EAAKlD,KAAN,KACC,yBAAKtB,UAAU,eAAeC,MAAO,CAAEwE,QAAS,iBAC/C,yBAAKzE,UAAU,OAAOC,MAAO,CAAEgC,UAAW,WACzC,uBAAGjC,UAAU,aAAb,QACA,uBAAGA,UAAU,YAAb,6CAGF,yBAAKA,UAAU,kBACd,wBAAIA,UAAU,eACd,2BAAIP,KAAKC,MAAMgF,kB,GAdQ/D,aCgMdgE,G,mNA1LdnF,MAAQ,CACPoF,MAAO,EACPC,cAAe,CACd7B,IAAK,EACL8B,OAAQ,EACRJ,UAAW,MACX/E,MAAO,QACPoF,OAAQ,GAET7E,gBAAgB,G,EAyBjB8E,sBAAwB,WACvB,EAAKxC,UAAS,SAAChD,EAAOE,GAAR,MAAmB,CAChCkF,MAAOpF,EAAMoF,MAAQ,EACrBC,cAAe,CACd7B,GAAItD,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAG5B,GACnC8B,MAAOpF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGE,MACtCJ,UAAWhF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGF,UAC1C/E,MAAOD,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGjF,MACtCoF,MAAOrF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGG,MACtCG,YAAaxF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGM,kB,EAK/CC,sBAAwB,WACvB,EAAK3C,UAAS,SAAChD,EAAOE,GAAR,MAAmB,CAChCkF,MAAOpF,EAAMoF,MAAQ,EACrBC,cAAe,CACd7B,GAAItD,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAG5B,GACnC8B,MAAOpF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGE,MACtCJ,UAAWhF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGF,UAC1C/E,MAAOD,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGjF,MACtCoF,MAAOrF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGG,MACtCG,YAAaxF,EAAMuF,QAAQzF,EAAMoF,MAAQ,GAAGM,kB,EAK/CE,iBAAmB,SAACF,GACnB,OAAIG,MAAMH,IAAgC,IAAhBA,EAExB,yBAAKlF,UAAU,4BACd,uBAAGA,UAAU,uBACZ,0BAAMA,UAAU,QAAhB,OAIOkF,EAAc,EAEvB,yBAAKlF,UAAU,4BACd,uBAAGA,UAAU,uBACZ,0BAAMA,UAAU,wBAAhB,IAAyCkF,EAAzC,KADD,wBAQD,yBAAKlF,UAAU,4BACd,uBAAGA,UAAU,uBACZ,0BAAMA,UAAU,sBAAsBkF,EAAtC,KADD,yB,EASJI,wBAA0B,SAACZ,GAC1B,MAAkB,QAAdA,EACI,wCACiB,QAAdA,EACH,wCAGA,yC,oEArF6B,IAAjCjF,KAAKD,MAAMqF,cAAc7B,IAAavD,KAAKC,MAAMuF,QAAQM,OAAS,GACrE9F,KAAK+C,UAAS,SAAChD,EAAOE,GAAR,MAAmB,CAChCmF,cAAe,CACd7B,GAAItD,EAAMuF,QAAQ,GAAGjC,GACrB8B,MAAOpF,EAAMuF,QAAQ,GAAGH,MACxBJ,UAAWhF,EAAMuF,QAAQ,GAAGP,UAC5B/E,MAAOD,EAAMuF,QAAQ,GAAGtF,MACxBoF,MAAOrF,EAAMuF,QAAQ,GAAGF,MACxBG,YAAaxF,EAAMuF,QAAQ,GAAGC,iBAMjC,IAAMpC,EAAsD,SAA/CL,aAAaM,QAAQ,sBAC9BtD,KAAKD,MAAMU,iBAAmB4C,GACjCrD,KAAK+C,SAAS,CAAEtC,eAAgB4C,M,+BAyExB,IAAD,EACgDrD,KAAKD,MAAMqF,cAA3DC,EADA,EACAA,MAAOJ,EADP,EACOA,UAAW/E,EADlB,EACkBA,MAAOoF,EADzB,EACyBA,MAAOG,EADhC,EACgCA,YACxC,OACC,kBAAC,IAAMnF,SAAP,KACC,kBAACyE,EAAA,EAAD,CAAMxE,UAAU,WACgB,IAA9BP,KAAKC,MAAMuF,QAAQM,OACnB,kBAACf,EAAA,EAAKlD,KAAN,KACC,yBAAKtB,UAAU,6BACd,yBAAKA,UAAU,yBACQ,IAArBP,KAAKD,MAAMoF,MACX,oCACC,uBAAG5E,UAAU,gBADd,IACiC,8CAGjC,IAGF,yBAAKA,UAAU,kBACd,uBACC6B,IAAI,sBACJC,OAAO,SACPF,KAAMnC,KAAK6F,wBAAwBZ,IAEnC,uBAAG1E,UAAU,mCAKhB,yBAAKA,UAAU,gBACQ,IAArBP,KAAKD,MAAMoF,MACX,yBACChF,QAASH,KAAK0F,sBACdnF,UAAU,2BAEV,uBAAGA,UAAU,6BAGd,yBAAKA,UAAU,mBACd,uBAAGA,UAAU,kCAGf,yBAAKA,UAAU,QACd,uBAAGA,UAAU,aAAa8E,EAA1B,WACA,uBAAG9E,UAAU,YAAb,SAA+B+E,GAE9BtF,KAAKD,MAAMU,eACX,uBAAGF,UAAW,mBAAqBL,GACjCA,EAAMY,OAAO,GAAGC,cAAgBb,EAAMc,MAAM,IAG9C,uBAAGT,UAAU,YAAb,SACO,uBAAGA,UAAW,iBAAmBL,KAGxCF,KAAK2F,iBAAiBF,IAEvBzF,KAAKD,MAAMoF,QAAUnF,KAAKC,MAAMuF,QAAQM,OAAS,EACjD,yBACC3F,QAASH,KAAKuF,sBACdhF,UAAU,2BAEV,uBAAGA,UAAU,8BAGd,yBAAKA,UAAU,mBACd,uBAAGA,UAAU,oCAIhB,yBAAKA,UAAU,kBACd,wBAAIA,UAAU,eACd,2BAAI0E,KAIN,kBAAC,EAAD,CAAgBA,UAAWjF,KAAKC,MAAMgF,kB,GAnLvB/D,cCqLN6E,G,mNArLdhG,MAAQ,CACPiG,WAAY,CACXC,IAAK,CACJT,QAAS,IAEVU,IAAK,CACJV,QAAS,IAEVW,IAAK,CACJX,QAAS,KAGXtF,MAAO,I,EAoBRkG,gBAAkB,WACjBC,QAAQC,IAAI,sCAEZC,IACEC,IAAIxE,uDACJyE,MAAK,SAACC,GACa,MAAfA,EAAIC,OACP,EAAKC,yBAAyBF,GAE9BL,QAAQC,IAAI,2BAA6BI,EAAIC,WAG9CE,OAAM,SAACC,GACPT,QAAQC,IAAIQ,O,EAIfF,yBAA2B,SAACF,GAC3B,IAAIV,EAAU,eAAQ,EAAKjG,MAAMiG,YAGjCe,OAAOC,QAAQhB,GAAYiB,SAAQ,SAACC,GACnCA,EAAQ,GAAG1B,QAAU,MAGtBkB,EAAIrD,KAAK4D,SAAQ,SAACC,GACjBA,EAAQC,gBAAgBF,SAAQ,SAACG,GAAY,IACpC7D,EAAkD6D,EAAlD7D,GAAI+B,EAA8C8B,EAA9C9B,MAAOD,EAAuC+B,EAAvC/B,MAAOgC,EAAgCD,EAAhCC,4BACpBnH,EAAQ,EAAKoH,4BAA4BF,EAAOlH,OAExC,IAAVmF,GAAe,EAAKkC,gBAAgBrH,IACvC8F,EAAWkB,EAAQjC,WAAWO,QAAQgC,KAAK,CAC1CjE,GAAIA,EACJrD,MAAOA,EACPoF,MAAOA,EACPD,MAAOA,EACPJ,UAAWiC,EAAQjC,UAAUlE,cAC7B0E,YAAagC,QAAsC,IAA9BJ,GAAmCK,QAAQ,YAKpE,EAAK3E,SAAS,CAAEiD,WAAYA,GAAc,EAAK/F,MAAM0H,uB,EAGtDJ,gBAAkB,SAACrH,GAElB,IAAI0H,EAAW,CAAC,QAAS,OAAQ,SAAU,UACrCzC,EAAQyC,EAASC,QAAQ,EAAK9H,MAAMG,OAAS,EAInD,OAHA0H,EAAWA,EAAS5G,MAAM,EAAGmE,IAGb0C,QAAQ3H,IAAU,G,EAInCoH,4BAA8B,SAACpH,GAC9B,OAAQA,GACP,IAAK,eACJ,MAAO,QACR,IAAK,cACJ,MAAO,OACR,IAAK,gBACJ,MAAO,SACR,IAAK,gBACJ,MAAO,SACR,IAAK,eACJ,MAAO,aACR,QACC,MAAO,U,EAIV4H,4BAA8B,SAAC5H,GAC9B,OAAQA,GACP,IAAK,QACJ,MAAO,iBACR,IAAK,OACJ,MAAO,gBACR,IAAK,SACJ,MAAO,kBACR,IAAK,SACJ,MAAO,kBACR,IAAK,eACJ,MAAO,eACR,QACC,MAAO,mB,EAIV6H,iBAAmB,SAACvC,GACnB,IAAIwC,EAAa,YAAOxC,GAoCxB,OA7BAwC,EAAgBA,EAAcC,KAAI,SAACf,GAClC,IAAMgB,EAJkB,GAIGhB,EAAQzB,YAC7B0C,EAAiBjB,EAAQ7B,MAAQ,IAPpB,IASf+C,EAAgB,EACpB,OAAQlB,EAAQhH,OACf,IAAK,SACJkI,EAAgB,EAChB,MACD,IAAK,SACJA,EAAgB,IAChB,MACD,IAAK,OACJA,EAAgB,GAChB,MACD,IAAK,QACJA,EAAgB,IAChB,MACD,QACCA,EAAgB,EAIlB,OADAA,GA1BmB,IA2BZ,2BAAKlB,GAAZ,IAAqBmB,MAAOF,EAAgBC,EAAgBF,QAI/CI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEF,MAAQG,EAAEH,MAAQ,GAAK,KAEhDL,G,kEA/IP,IAAM3E,EAAOL,aAAaM,QAAQ,SAC9BD,GACHrD,KAAK+C,SAAS,CAAE7C,MAAOmD,IAExBrD,KAAKoG,oB,2CAKL,IADA,IAAMqC,EAAQ,CAAC,GAAI,IACVC,EAAID,EAAM,GAAIC,GAAKD,EAAM,GAAIC,IACjC1I,KAAKC,MAAM0I,YAAY1C,IAAI2C,cAAgBF,GAC9C1I,KAAKoG,oB,+BAuIE,IAAD,EACkBpG,KAAKD,MAAMiG,WAA7BC,EADA,EACAA,IAAKC,EADL,EACKA,IAAKC,EADV,EACUA,IAEZ0C,EAAa7I,KAAK+H,iBAAiB9B,EAAIT,SACvCsD,EAAa9I,KAAK+H,iBAAiB7B,EAAIV,SACvCuD,EAAa/I,KAAK+H,iBAAiB5B,EAAIX,SAE7C,OACC,kBAAC,IAAMlF,SAAP,KACC,yBAAKC,UAAU,wBACd,kBAAC,EAAD,CAAQiF,QAASqD,EAAY5D,UAAW,QACxC,kBAAC,EAAD,CAAQO,QAASsD,EAAY7D,UAAW,QACxC,kBAAC,EAAD,CAAQO,QAASuD,EAAY9D,UAAW,c,GA/KvB/D,c,SC4CP8H,G,mNA7CdjJ,MAAQ,CACPkJ,0BAA2B,GAC3BC,eAAe,G,EAEhBC,YAAc,SAACP,GAEd,GAAIA,EADY,GAEf,OAAO,kBAAC,IAAD,CAAO1I,MAAM,UAAb,iDAEP,IAAMkJ,EAJS,GAIkBR,EAC3BS,EAAiB,EAAKC,4BAA4BF,GAExD,OAAIA,GAAkB,GAAwB,IAAnBA,GAAwBA,GAAkB,GAC7D,kBAAC,IAAD,CAAOlJ,MAAM,WAAb,kBAAuCmJ,GAEvC,kBAAC,IAAD,CAAOnJ,MAAM,WAAb,kBAAuCmJ,I,EAKjDC,4BAA8B,SAACF,GAC9B,OAAIA,EAAiB,GACbA,EAAiB,WACK,IAAnBA,GAAwBA,GAAkB,GAE7C,qBAED,K,uDAIP,IAAMG,EAAcvJ,KAAKmJ,YAAYnJ,KAAKC,MAAM0I,YAAY1C,IAAI2C,aAIhE,OACC,kBAAC,IAAMtI,SAAP,KACC,yBAAKC,UAAU,uBACd,yBAAKA,UAAU,aAAagJ,S,GAvCdrI,cCWJsI,E,4MAbdzJ,MAAQ,G,uDAEP,OACC,kBAAC,IAAMO,SAAP,KACC,mDACA,yDAC2B,uBAAGC,UAAU,uB,GAPlBW,aCSXuI,G,mNANd1J,MAAQ,G,uDAEP,OAAO,kBAAC,IAAMO,SAAP,U,GAHuBY,cC4JjBwI,G,mNAjJd3J,MAAQ,CACP4I,YAAa,CACZ1C,IAAK,CACJ0D,iBAAkB,GAClBf,aAAc,GAEf1C,IAAK,CACJyD,iBAAkB,GAClBf,aAAc,GAEfzC,IAAK,CACJwD,iBAAkB,GAClBf,aAAc,IAGhBgB,aAAa,EACbC,eAAe,G,EAwBhBC,yBAA2B,WAC1B,GAAI,EAAK7J,MAAMoE,aAAc,CAC5B,IAAIsE,EAAW,eAAQ,EAAK5I,MAAM4I,aAClC5B,OAAOC,QAAQ,EAAKjH,MAAM4I,aAAa1B,SAAQ,SAAC8C,GAC/C,IAAM9E,EAAY8E,EAAM,GAClBC,EAAO,IAAIC,KAAKF,EAAM,GAAGJ,kBAC/BhB,EAAY1D,GAAW2D,YAAc,EAAKsB,mBAAmBF,MAG9D,EAAKjH,SAAS,CAAE4F,YAAaA,EAAaiB,aAAa,M,EAIzDM,mBAAqB,SAACF,GACrB,IAAMG,EAAU,IAAIF,KACpB,OAAOG,UAAUD,EAAUH,GAAQ,IAAM,K,EAG1CK,wBAA0B,WACzBhE,QAAQC,IAAI,iDACZC,IACEC,IAAIxE,mEACJyE,MAAK,SAACC,GACa,MAAfA,EAAIC,OACP,EAAK2D,2BAA2B5D,GAEhCL,QAAQC,IAAI,sCAAwCI,EAAIC,WAGzDE,OAAM,SAACC,GACPT,QAAQC,IAAIQ,O,EAIfwD,2BAA6B,SAAC5D,GAC7B,IAAIiC,EAAW,eAAQ,EAAK5I,MAAM4I,aAClC5B,OAAOC,QAAQN,EAAIrD,MAAM4D,SAAQ,SAAC8C,GACjC,IAAM9E,EAAY8E,EAAM,GAClBC,EAAO,IAAIC,KAAKF,EAAM,IAC5BpB,EAAY1D,GAAW0E,iBAAmBK,KAE3C,EAAKjH,SAAS,CAAE4F,YAAaA,K,EAI9B4B,uBAAyB,WACxB,IAAI5B,EAAW,eAAQ,EAAK5I,MAAM4I,aAClCA,EAAW,IAAQC,YAAc,EACjCD,EAAW,IAAQC,YAAc,EACjCD,EAAW,IAAQC,YAAc,EACjC,EAAK7F,SAAS,CAAE4F,YAAaA,K,EAG9BhB,qBAAuB,WACtB,EAAK5E,SAAS,CAAE8G,eAAe,K,kEA1E/B7J,KAAK+C,SAAS,CACbyH,iCAAkCC,YAAYzK,KAAK8J,yBAA0B,OAE9E9J,KAAKqK,4B,6CAILK,cAAc1K,KAAKD,MAAMyK,oC,2CAIzB,IADA,IAAM/B,EAAQ,CAAC,GAAI,IACVC,EAAID,EAAM,GAAIC,GAAKD,EAAM,GAAIC,IACjC1I,KAAKD,MAAM4I,YAAY1C,IAAI2C,cAAgBF,IAC9C1I,KAAKuK,yBACLvK,KAAKqK,6B,+BAgEP,OACC,kBAAC,IAAM/J,SAAP,KACC,yBAAKC,UAAU,+BACbP,KAAKC,MAAMiE,oBACZlE,KAAKD,MAAM6J,aACX5J,KAAKD,MAAM8J,cACV,GAEA,oCACC,yBAAKtJ,UAAU,qBACd,kBAAC4D,EAAA,EAAD,CAASzC,UAAU,SAAS0C,KAAK,aAInCpE,KAAKC,MAAMoE,aACX,kBAAC,IAAM/D,SAAP,KACC,kBAAC,EAAD,MACA,yBAAKC,UAAU,0BACd,yBAAKA,UAAU,uBACd,yBAAKA,UAAU,wBACd,uBACC4B,KAAMH,uBACNzB,UAAU,qBAEV,uBAAGA,UAAU,4CAGf,kBAAC,EAAD,CAAMoI,YAAa3I,KAAKD,MAAM4I,eAG/B,kBAAC,EAAD,CACChB,qBAAsB3H,KAAK2H,qBAC3BgB,YAAa3I,KAAKD,MAAM4I,YACxBgC,mBAAoB3K,KAAKuK,yBAE1B,kBAAC,EAAD,QAIF,kBAAC,EAAD,Y,GA1IoBrJ,cCoGX0J,G,mNAzGd7K,MAAQ,CACPG,MAAO,GACP2K,YAAa,CACZC,SAAU,IACVC,OAAQ,MAGT1G,cAAc,EACdH,oBAAoB,G,EAQrB8G,kBAAoB,SAAC9K,GACpB,EAAK6C,SAAS,CAAE7C,MAAOA,K,EAGxB+K,yBAA2B,WAC1B,EAAKlI,SAAS,CAAE7C,MAAO,M,EAIxBgL,mBAAqB,WAChB,EAAKC,oBACR,EAAKpI,SAAS,CAAEsB,cAAc,EAAMH,oBAAoB,IAExD,EAAKnB,SAAS,CAAEsB,cAAc,EAAOH,oBAAoB,K,EAI3DiH,kBAAoB,WACnB,IAAMC,GAAU,IAAInB,MAAOoB,WADF,EAEI,EAAKtL,MAAM8K,YAAhCC,EAFiB,EAEjBA,SAAUC,EAFO,EAEPA,OAClB,OAAIK,GAAWN,GAAYM,EAAUL,G,EAQtCO,YAAc,WACb,IAAMF,GAAU,IAAInB,MAAOoB,WAM3B,OACED,GAAW,IAAMA,GAAW,KACf,IAAZA,GAA6B,KAAZA,IAAmBA,GAAW,EAE1C,EAAKG,kBACFH,GAAW,GAAKA,GAAW,GAC9B,EAAKI,oBACFJ,GAAW,IAAMA,GAAW,GAC/B,EAAKK,sBAEL,EAAKC,qB,EAKdH,gBAAkB,WACjB,OAAO,uBAAGhL,UAAU,iB,EAErBiL,kBAAoB,WACnB,OAAO,uBAAGjL,UAAU,gB,EAErBkL,oBAAsB,WACrB,OAAO,uBAAGlL,UAAU,gB,EAErBmL,kBAAoB,WACnB,OAAO,uBAAGnL,UAAU,iB,kEAhEpBkK,YAAYzK,KAAKkL,mBAAoB,O,+BAoErC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAM5J,wBAClB,kBAAC6J,EAAD,CACCxH,aAAcrE,KAAKD,MAAMsE,aACzBM,YAAa3E,KAAKgL,kBAClBpG,mBAAoB5E,KAAKiL,yBACzB/K,MAAOF,KAAKD,MAAMG,MAClBgE,mBAAoBlE,KAAKD,MAAMmE,mBAC/BoH,YAAatL,KAAKsL,eAGpB,kBAAC,IAAD,CAAOM,KAAM5J,uCACZ,kBAAC,EAAD,CACCqC,aAAcrE,KAAKD,MAAMsE,aACzBH,mBAAoBlE,KAAKD,MAAMmE,4B,GAjGpBhD,cCAlB4K,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,Sf2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdzF,OAAM,SAAA0F,GACLlG,QAAQkG,MAAMA,EAAMC,a","file":"static/js/main.2a746986.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport './ColorOptionStyle.css';\nimport '../../../styles/shared/Colors.css';\n\nclass ColorOption extends Component {\n\tstate = {};\n\n\trender() {\n\t\tconst { color, onClick, handleMouseOver, handleMouseLeave } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{color === 'grey' ? (\n\t\t\t\t\t<div className={color + '-background color-option'}>\n\t\t\t\t\t\t<i className='fas fa-car-side' style={{ color: '#fff' }}></i>\n\t\t\t\t\t</div>\n\t\t\t\t) : this.props.colorBlindMode ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\toutline\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tcolor +\n\t\t\t\t\t\t\t'-color-blind-background color-blind-option pointer border-' +\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)} Permit\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\toutline\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={color + '-background color-option'}\n\t\t\t\t\t\t// className={\n\t\t\t\t\t\t// \tthis.props.colorBlindMode\n\t\t\t\t\t\t// \t\t? ''\n\t\t\t\t\t\t// \t\t: color + '-background color-option pointer'\n\t\t\t\t\t\t// }\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className='fas fa-car-side'></i>\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorOption;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './ConfirmModal.css';\n\nfunction ConfirmModal(props) {\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tcentered={true}\n\t\t\t\tshow={props.showModal}\n\t\t\t\tonHide={props.onModalClose}\n\t\t\t\tanimation={true}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='modal-body-text'>\n\t\t\t\t\t\tYou have {props.color === 'orange' ? 'an' : 'a'} {props.color} permit?\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Link to={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tclassName={props.color + '-button confirm-button'}\n\t\t\t\t\t\t\tonClick={props.onModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className='fas fa-check fa-sm'></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default ConfirmModal;\n","import React, { Component } from 'react';\n\nimport './Footer.css';\n\nclass Footer extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='footer'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMade with <i className='fas fa-heart'></i> by{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tToby\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='sub-text'>\n\t\t\t\t\t\tLike the project? A <i className='far fa-star'></i> on the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane/UTD-Parking-Assist'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\trepo\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tis much appeciated :D\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport './Header.css';\n\nclass Header extends Component {\n\tstate = {};\n\n\tserverWarningAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='warning'>\n\t\t\t\t<i className='fas fa-exclamation-circle fa-lg'></i>\n\t\t\t\tTo conserve server loads, servers will rest outside of 8:00AM - 8:00PM CST\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tserverDownAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='danger'>\n\t\t\t\t<i class='fas fa-exclamation-triangle fa-lg'></i>\n\t\t\t\tServers are down. I'm either broke or this is unexpected. Kindly{' '}\n\t\t\t\t<a href='mailto: tobychow98@gmail.com?subject=UTD Parking Assist: Website Issue'>\n\t\t\t\t\tcontact me\n\t\t\t\t</a>{' '}\n\t\t\t\tif it's the latter.\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tgetServerTextFromProps = () => {\n\t\tconst { type } = this.props;\n\t\tif (type === 'server-warning') {\n\t\t\treturn this.serverWarningAlert();\n\t\t} else if (type === 'server-down') {\n\t\t\treturn this.serverDownAlert();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='header-container'>{this.getServerTextFromProps()}</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Tooltip } from 'reactstrap';\n\nimport './ColorBlindButton.css';\n\nclass ColorBlindButton extends Component {\n\tstate = {\n\t\tcolorBlindTooltipOpen: false,\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\ttoggleColorBlindMode = () => {\n\t\tthis.setState({ colorBlindMode: !this.state.colorBlindMode });\n\t\tlocalStorage.setItem('color-blind-status', !this.state.colorBlindMode);\n\t};\n\n\t/* TOOLTIPS */\n\ttoggleColorBlindTooltip = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: !this.state.colorBlindTooltipOpen });\n\t};\n\n\tmouseHoverColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: true });\n\t};\n\n\tmouseLeaveColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: false });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tonClick={this.toggleColorBlindMode}\n\t\t\t\t\tid='color-blind'\n\t\t\t\t\tclassName='color-blind-container pointer'\n\t\t\t\t>\n\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t<i className='fas fa-eye fa-lg'></i>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<i className='fas fa-low-vision fa-lg'></i>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Tooltip\n\t\t\t\t\tplacement='left'\n\t\t\t\t\tisOpen={this.state.colorBlindTooltipOpen}\n\t\t\t\t\ttarget='color-blind'\n\t\t\t\t\ttoggle={this.toggleColorBlindTooltip}\n\t\t\t\t>\n\t\t\t\t\tColor Blind Accessability\n\t\t\t\t</Tooltip>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorBlindButton;\n","import React, { Component } from 'react';\nimport { Spinner, Popover, PopoverBody } from 'reactstrap';\n\nimport ColorOption from './ColorOption/ColorOption';\nimport ConfirmModal from './ConfirmModal/ConfirmModal';\nimport Footer from './Footer/Footer';\nimport Header from '../Header/Header';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\n\nimport './HomePageStyle.css';\nimport '../../styles/shared/Colors.css';\nimport '../../styles/shared/LoadingSpinner.css';\n\nclass Home extends Component {\n\t//home\n\tstate = {\n\t\tshowModal: false,\n\t\tcolorBlindMode: false,\n\t\tpopoverOpen: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\t// maintain popover\n\ttogglePopover = () => this.setState({ popoverOpen: !this.state.popoverOpen });\n\n\t// maintain modal\n\thandleModalClose = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\thandleModalShow = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\thandleModalConfirm = () => {\n\t\tlocalStorage.setItem('color', this.props.color);\n\t\tthis.setState({ showModal: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.props.onlineStatusLoaded ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t<Spinner animation='border' role='status'></Spinner>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ColorBlindButton />\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tinnerClassName='popover-content'\n\t\t\t\t\t\t\ttrigger='hover'\n\t\t\t\t\t\t\tplacement='bottom'\n\t\t\t\t\t\t\tisOpen={this.state.popoverOpen}\n\t\t\t\t\t\t\ttarget='info-text'\n\t\t\t\t\t\t\ttoggle={this.togglePopover}\n\t\t\t\t\t\t\tflip={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t<div className='popover-text-container'>\n\t\t\t\t\t\t\t\t\tIf any visual impairements, select the{' '}\n\t\t\t\t\t\t\t\t\t<i className='fas fa-low-vision'></i> at the top right.\n\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t<p>UTD Permits works on shared tiers:</p>\n\t\t\t\t\t\t\t\t\t<div className='color-access-listings'>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,and{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='orange'>Orange</span>,and{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\tUTD Parking\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<p>Live parking data at your fingertips</p>\n\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\n\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='gold'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='orange'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='purple'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this.state.showModal) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.changeColorDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id='info-text' className='bottom-text row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<p>But, how does it work?</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\t\t\t\tshowModal={this.state.showModal}\n\t\t\t\t\t\t\t\tonModalShow={this.handleModalShow}\n\t\t\t\t\t\t\t\tonModalClose={this.handleModalClose}\n\t\t\t\t\t\t\t\tonModalConfirm={this.handleModalConfirm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Header type='server-warning'></Header>\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tinnerClassName='popover-content'\n\t\t\t\t\t\t\ttrigger='hover'\n\t\t\t\t\t\t\tplacement='bottom'\n\t\t\t\t\t\t\tisOpen={this.state.popoverOpen}\n\t\t\t\t\t\t\ttarget='info-text'\n\t\t\t\t\t\t\ttoggle={this.togglePopover}\n\t\t\t\t\t\t\tflip={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t<div className='popover-text-container'>\n\t\t\t\t\t\t\t\t\tIf any visual impairements, select the{' '}\n\t\t\t\t\t\t\t\t\t<i className='fas fa-low-vision'></i> at the top right.\n\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t<p>UTD Permits works on shared tiers:</p>\n\t\t\t\t\t\t\t\t\t<div className='color-access-listings'>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,and{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span> accesses{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='green'>Green</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='gold'>Gold</span>,\n\t\t\t\t\t\t\t\t\t\t\t<span className='orange'>Orange</span>,and{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className='purple'>Purple</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<h1 className={'grey title-greeting'}>UTD Parking</h1>\n\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\t\t\t\t\t\t\t\t\t<p className={'grey'}>Live parking data at your fingertips</p>\n\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id='info-text' className='bottom-text row grey'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<p>But, how does it work?</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t<Footer />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass FullPSCardBody extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<div className='ps-card-body' style={{ padding: '0rem 1.25rem' }}>\n\t\t\t\t\t\t<div className='text' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t<p className='main-text'>FULL</p>\n\t\t\t\t\t\t\t<p className='sub-text'>No available parking spots at this time</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t<p>{this.props.structure}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default FullPSCardBody;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport FullPSCardBody from './FullPSCardBody/FullPSCardBody.jsx';\n\nimport './PSCard.css';\nimport '../../../../styles/shared/Colors.css';\n\nclass PSCard extends Component {\n\tstate = {\n\t\tindex: 0,\n\t\tcurrentPermit: {\n\t\t\tid: -1,\n\t\t\tspots: -1,\n\t\t\tstructure: 'ps1',\n\t\t\tcolor: 'green',\n\t\t\tlevel: -1,\n\t\t},\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\t// initialize current permit\n\t\tif (this.state.currentPermit.id === -1 && this.props.dataArr.length > 0) {\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tcurrentPermit: {\n\t\t\t\t\tid: props.dataArr[0].id,\n\t\t\t\t\tspots: props.dataArr[0].spots,\n\t\t\t\t\tstructure: props.dataArr[0].structure,\n\t\t\t\t\tcolor: props.dataArr[0].color,\n\t\t\t\t\tlevel: props.dataArr[0].level,\n\t\t\t\t\tspot_change: props.dataArr[0].spot_change,\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\n\t\t// get color blind status\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\thandleIncrementUpdate = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tindex: state.index + 1,\n\t\t\tcurrentPermit: {\n\t\t\t\tid: props.dataArr[state.index + 1].id,\n\t\t\t\tspots: props.dataArr[state.index + 1].spots,\n\t\t\t\tstructure: props.dataArr[state.index + 1].structure,\n\t\t\t\tcolor: props.dataArr[state.index + 1].color,\n\t\t\t\tlevel: props.dataArr[state.index + 1].level,\n\t\t\t\tspot_change: props.dataArr[state.index + 1].spot_change,\n\t\t\t},\n\t\t}));\n\t};\n\n\thandleDecrementUpdate = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tindex: state.index - 1,\n\t\t\tcurrentPermit: {\n\t\t\t\tid: props.dataArr[state.index - 1].id,\n\t\t\t\tspots: props.dataArr[state.index - 1].spots,\n\t\t\t\tstructure: props.dataArr[state.index - 1].structure,\n\t\t\t\tcolor: props.dataArr[state.index - 1].color,\n\t\t\t\tlevel: props.dataArr[state.index - 1].level,\n\t\t\t\tspot_change: props.dataArr[state.index - 1].spot_change,\n\t\t\t},\n\t\t}));\n\t};\n\n\tgetSpotChangeJSX = (spot_change) => {\n\t\tif (isNaN(spot_change) || spot_change === 0) {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='grey'>-</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (spot_change > 0) {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='percent-change-green'>+{spot_change}%</span> space\n\t\t\t\t\t\tavailability\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='percent-change-container'>\n\t\t\t\t\t<p className='percent-change-text'>\n\t\t\t\t\t\t<span className='percent-change-red'>{spot_change}%</span> space\n\t\t\t\t\t\tavailability\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tgetParkingStructureLink = (structure) => {\n\t\tif (structure === 'PS1') {\n\t\t\treturn 'https://goo.gl/maps/KHvbiG6WtTbbTKSa9';\n\t\t} else if (structure === 'PS3') {\n\t\t\treturn 'https://goo.gl/maps/kFAHUwgEb1NwTAbv5';\n\t\t} else {\n\t\t\t// 'ps4\n\t\t\treturn 'https://goo.gl/maps/jcU9wcRKYS6MoVuY8';\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { spots, structure, color, level, spot_change } = this.state.currentPermit;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card className='ps-card'>\n\t\t\t\t\t{this.props.dataArr.length !== 0 ? (\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<div className='text-muted ps-card-header'>\n\t\t\t\t\t\t\t\t<div className='best-choice-container'>\n\t\t\t\t\t\t\t\t\t{this.state.index === 0 ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-star'></i> <span>BEST CHOICE</span>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='icon-container'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\thref={this.getParkingStructureLink(structure)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-map-marked-alt fa-lg'></i>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='ps-card-body'>\n\t\t\t\t\t\t\t\t{this.state.index !== 0 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleDecrementUpdate}\n\t\t\t\t\t\t\t\t\t\tclassName='pointer arrow-container'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className='text'>\n\t\t\t\t\t\t\t\t\t<p className='main-text'>{spots} SPACES</p>\n\t\t\t\t\t\t\t\t\t<p className='sub-text'>Level {level}</p>\n\n\t\t\t\t\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t\t\t\t\t<p className={'sub-text border-' + color}>\n\t\t\t\t\t\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p className='sub-text'>\n\t\t\t\t\t\t\t\t\t\t\tColor <i className={'fas fa-circle ' + color}></i>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{this.getSpotChangeJSX(spot_change)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{this.state.index !== this.props.dataArr.length - 1 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleIncrementUpdate}\n\t\t\t\t\t\t\t\t\t\tclassName='arrow-container pointer'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t\t\t<p>{structure}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<FullPSCardBody structure={this.props.structure} />\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSCard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport PSCard from './PSCard/PSCard';\n\nimport './PSGroup.css';\n\nclass PSGroup extends Component {\n\tstate = {\n\t\tstructures: {\n\t\t\tps1: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t},\n\t\tcolor: '',\n\t};\n\n\tcomponentDidMount() {\n\t\tconst data = localStorage.getItem('color');\n\t\tif (data) {\n\t\t\tthis.setState({ color: data });\n\t\t}\n\t\tthis.handleHTTPGetPS();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.props.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleHTTPGetPS();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleHTTPGetPS = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/');\n\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updatePSFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/ ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdatePSFromHTTPResponse = (res) => {\n\t\tlet structures = { ...this.state.structures };\n\n\t\t// reset dataArr for each parking structure\n\t\tObject.entries(structures).forEach((element) => {\n\t\t\telement[1].dataArr = [];\n\t\t});\n\n\t\tres.data.forEach((element) => {\n\t\t\telement.permit_category.forEach((permit) => {\n\t\t\t\tconst { id, level, spots, percent_change_past_10_mins } = permit;\n\t\t\t\tconst color = this.standardizeColorLongToShort(permit.color);\n\n\t\t\t\tif (spots !== 0 && this.isRelevantColor(color)) {\n\t\t\t\t\tstructures[element.structure].dataArr.push({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\tspots: spots,\n\t\t\t\t\t\tstructure: element.structure.toUpperCase(),\n\t\t\t\t\t\tspot_change: Number((percent_change_past_10_mins * 100).toFixed(2)),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.setState({ structures: structures }, this.props.setPSGroupLoadedTrue);\n\t};\n\n\tisRelevantColor = (color) => {\n\t\t// cut array to relavent colors\n\t\tlet colorArr = ['green', 'gold', 'orange', 'purple'];\n\t\tconst index = colorArr.indexOf(this.state.color) + 1;\n\t\tcolorArr = colorArr.slice(0, index);\n\n\t\t// check if color is in array\n\t\treturn colorArr.indexOf(color) > -1;\n\t};\n\n\t// returns standardized color. 'Green Permit' -> 'green'\n\tstandardizeColorLongToShort = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'Green Permit':\n\t\t\t\treturn 'green';\n\t\t\tcase 'Gold Permit':\n\t\t\t\treturn 'gold';\n\t\t\tcase 'Orange Permit':\n\t\t\t\treturn 'orange';\n\t\t\tcase 'Purple Permit':\n\t\t\t\treturn 'purple';\n\t\t\tcase 'Pay-By-Space':\n\t\t\t\treturn 'payBySpace';\n\t\t\tdefault:\n\t\t\t\treturn 'green';\n\t\t}\n\t};\n\n\tstandardizeColorShortToLong = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'green':\n\t\t\t\treturn 'Green%20Permit';\n\t\t\tcase 'gold':\n\t\t\t\treturn 'Gold%20Permit';\n\t\t\tcase 'orange':\n\t\t\t\treturn 'Orange%20Permit';\n\t\t\tcase 'purple':\n\t\t\t\treturn 'Purple%20Permit';\n\t\t\tcase 'pay-by-space':\n\t\t\t\treturn 'Pay-By-Space';\n\t\t\tdefault:\n\t\t\t\treturn 'Green%20Permit';\n\t\t}\n\t};\n\n\tgetSortedDataArr = (dataArr) => {\n\t\tlet sortedDataArr = [...dataArr];\n\n\t\tconst spotsWeight = 0.25;\n\t\tconst colorWeight = 0.35;\n\t\tconst spotChangeWeight = 0.4;\n\n\t\t// assign pref score\n\t\tsortedDataArr = sortedDataArr.map((element) => {\n\t\t\tconst weightedSpotChange = element.spot_change * spotChangeWeight;\n\t\t\tconst weightedSpots = (element.spots / 250) * spotsWeight;\n\n\t\t\tlet weightedColor = 0;\n\t\t\tswitch (element.color) {\n\t\t\t\tcase 'purple':\n\t\t\t\t\tweightedColor = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orange':\n\t\t\t\t\tweightedColor = 0.75;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gold':\n\t\t\t\t\tweightedColor = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'green':\n\t\t\t\t\tweightedColor = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tweightedColor = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tweightedColor *= colorWeight;\n\t\t\treturn { ...element, score: weightedSpots + weightedColor + weightedSpotChange };\n\t\t});\n\n\t\t// sort the array\n\t\tsortedDataArr.sort((a, b) => (a.score < b.score ? 1 : -1));\n\n\t\treturn sortedDataArr;\n\t};\n\n\trender() {\n\t\tconst { ps1, ps3, ps4 } = this.state.structures;\n\n\t\tconst ps1DataArr = this.getSortedDataArr(ps1.dataArr);\n\t\tconst ps3DataArr = this.getSortedDataArr(ps3.dataArr);\n\t\tconst ps4DataArr = this.getSortedDataArr(ps4.dataArr);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='card-group-container'>\n\t\t\t\t\t<PSCard dataArr={ps1DataArr} structure={'PS1'} />\n\t\t\t\t\t<PSCard dataArr={ps3DataArr} structure={'PS3'} />\n\t\t\t\t\t<PSCard dataArr={ps4DataArr} structure={'PS4'} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSGroup;\n","import React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\n\nimport './Time.css';\n\nclass Time extends Component {\n\tstate = {\n\t\tupdateClientTimerInterval: '',\n\t\ttimerIsLoaded: false,\n\t};\n\tgetTimeText = (elapsedTime) => {\n\t\tconst maxTime = 63;\n\t\tif (elapsedTime > maxTime) {\n\t\t\treturn <Alert color='danger'>Something went wrong. Try refreshing the page</Alert>;\n\t\t} else {\n\t\t\tconst calculatedTime = maxTime - elapsedTime;\n\t\t\tconst updateTimeText = this.standardizeSecondsToMinutes(calculatedTime);\n\n\t\t\tif (calculatedTime <= 3 || calculatedTime === 0 || calculatedTime >= 60) {\n\t\t\t\treturn <Alert color='success'>Live update in {updateTimeText}</Alert>;\n\t\t\t} else {\n\t\t\t\treturn <Alert color='warning'>Live update in {updateTimeText}</Alert>;\n\t\t\t}\n\t\t}\n\t};\n\n\tstandardizeSecondsToMinutes = (calculatedTime) => {\n\t\tif (calculatedTime < 60) {\n\t\t\treturn calculatedTime + ' seconds';\n\t\t} else if (calculatedTime === 0 || calculatedTime >= 60) {\n\t\t\t// better ux. change if update is many seconds over minute\n\t\t\treturn 'less than 1 second';\n\t\t}\n\t\treturn '-';\n\t};\n\n\trender() {\n\t\tconst ps1TimeText = this.getTimeText(this.props.timeUpdated.ps1.elapsedTime);\n\t\t// const ps3TimeText = this.getTimeText(this.props.timeUpdated.ps3.elapsedTime);\n\t\t// const ps4TimeText = this.getTimeText(this.props.timeUpdated.ps4.elapsedTime);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='time-text-container'>\n\t\t\t\t\t<div className='time-text'>{ps1TimeText}</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Time;\n","import React, { Component } from 'react';\n\nclass OfflinePage extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>it's offline broooo</h1>\n\t\t\t\t<h3>\n\t\t\t\t\tlike from 8am to 8pm broo <i className='fas fa-heart'></i>\n\t\t\t\t</h3>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default OfflinePage;\n","import React, { Component } from 'react';\n\nimport './ParkingInfoFooter.css';\n\nclass ParkingInfoFooter extends Component {\n\tstate = {};\n\trender() {\n\t\treturn <React.Fragment></React.Fragment>;\n\t}\n}\n\nexport default ParkingInfoFooter;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios';\n\n//import ParkingStructureGroup from './ParkingStructureGroupv2/ParkingStructureGroupv2';\nimport ParkingStructureGroup from './PSGroup3.0.0/PSGroup';\nimport Time from './Time/Time';\nimport OfflinePage from './OfflinePage/OfflinePage';\nimport ParkingInfoFooter from './ParkingInfoFooter/ParkingInfoFooter';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\n\nimport '../../styles/shared/LoadingSpinner.css';\nimport './ParkingInfoPage.css';\n\nclass ParkingInfo extends Component {\n\tstate = {\n\t\ttimeUpdated: {\n\t\t\tps1: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t},\n\t\ttimerLoaded: false,\n\t\tpsGroupLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tupdateTimeUpdatedInStateInterval: setInterval(this.updateTimeUpdatedInState, 1000),\n\t\t});\n\t\tthis.handleHTTPGetUpdateTime();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.updateTimeUpdatedInStateInterval);\n\t}\n\tcomponentDidUpdate() {\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.state.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleResetElapsedTime();\n\t\t\t\tthis.handleHTTPGetUpdateTime();\n\t\t\t}\n\t\t}\n\t}\n\n\t// updates elapsed time in state\n\tupdateTimeUpdatedInState = () => {\n\t\tif (this.props.onlineStatus) {\n\t\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\t\tObject.entries(this.state.timeUpdated).forEach((value) => {\n\t\t\t\tconst structure = value[0];\n\t\t\t\tconst time = new Date(value[1].utc_updated_time);\n\t\t\t\ttimeUpdated[structure].elapsedTime = this.computeElapsedTime(time);\n\t\t\t});\n\n\t\t\tthis.setState({ timeUpdated: timeUpdated, timerLoaded: true });\n\t\t}\n\t};\n\n\tcomputeElapsedTime = (time) => {\n\t\tconst nowTime = new Date();\n\t\treturn parseInt((nowTime - time) / 1000, 10);\n\t};\n\n\thandleHTTPGetUpdateTime = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/timeUpdated');\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures/timeUpdated`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updateTimeFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/timeUpdated ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdateTimeFromHTTPResponse = (res) => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\tObject.entries(res.data).forEach((value) => {\n\t\t\tconst structure = value[0];\n\t\t\tconst time = new Date(value[1]);\n\t\t\ttimeUpdated[structure].utc_updated_time = time;\n\t\t});\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\t// avoid multiple API calls\n\thandleResetElapsedTime = () => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\ttimeUpdated['ps1'].elapsedTime = 0;\n\t\ttimeUpdated['ps3'].elapsedTime = 0;\n\t\ttimeUpdated['ps4'].elapsedTime = 0;\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\tsetPSGroupLoadedTrue = () => {\n\t\tthis.setState({ psGroupLoaded: true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='parking-info-page-container'>\n\t\t\t\t\t{this.props.onlineStatusLoaded &&\n\t\t\t\t\tthis.state.timerLoaded &&\n\t\t\t\t\tthis.state.psGroupLoaded ? (\n\t\t\t\t\t\t''\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t\t\t<Spinner animation='border' role='status'></Spinner>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<ColorBlindButton />\n\t\t\t\t\t\t\t<div className='parking-info-container'>\n\t\t\t\t\t\t\t\t<div className='parking-info-header'>\n\t\t\t\t\t\t\t\t\t<div className='back-route-container'>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={process.env.PUBLIC_URL + '/'}\n\t\t\t\t\t\t\t\t\t\t\tclassName='remove-decoration'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-chevron-left back-route-button'></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Time timeUpdated={this.state.timeUpdated} />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<ParkingStructureGroup\n\t\t\t\t\t\t\t\t\tsetPSGroupLoadedTrue={this.setPSGroupLoadedTrue}\n\t\t\t\t\t\t\t\t\ttimeUpdated={this.state.timeUpdated}\n\t\t\t\t\t\t\t\t\tonResetElapsedTime={this.handleResetElapsedTime}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ParkingInfoFooter />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<OfflinePage />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ParkingInfo;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport ParkingInfoPage from './components/ParkingInfoPage/ParkingInfoPage';\n\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tcolor: '',\n\t\tonlineHours: {\n\t\t\tfromHour: '0',\n\t\t\ttoHour: '25',\n\t\t},\n\n\t\tonlineStatus: false,\n\t\tonlineStatusLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tsetInterval(this.updateOnlineStatus, 900);\n\t}\n\n\t// changes color for header\n\thandleChangeColor = (color) => {\n\t\tthis.setState({ color: color });\n\t};\n\n\thandleChangeColorDefault = () => {\n\t\tthis.setState({ color: '' });\n\t};\n\n\t// update time\n\tupdateOnlineStatus = () => {\n\t\tif (this.checkOnlineStatus()) {\n\t\t\tthis.setState({ onlineStatus: true, onlineStatusLoaded: true });\n\t\t} else {\n\t\t\tthis.setState({ onlineStatus: false, onlineStatusLoaded: true });\n\t\t}\n\t};\n\n\tcheckOnlineStatus = () => {\n\t\tconst nowHour = new Date().getHours();\n\t\tconst { fromHour, toHour } = this.state.onlineHours;\n\t\tif (nowHour >= fromHour && nowHour < toHour) {\n\t\t\t// online\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetGreeting = () => {\n\t\tconst nowHour = new Date().getHours();\n\n\t\t// Night: [20-23], [0 or 24 - 5]\n\t\t// Morning: [6-11]\n\t\t// Afternoon: [12-16]\n\t\t// Evening: [17-19] evening\n\t\tif (\n\t\t\t(nowHour >= 20 && nowHour <= 23) ||\n\t\t\t((nowHour === 0 || nowHour === 24) && nowHour <= 5)\n\t\t) {\n\t\t\treturn this.getNightMessage();\n\t\t} else if (nowHour >= 6 && nowHour <= 11) {\n\t\t\treturn this.getMorningMessage();\n\t\t} else if (nowHour >= 12 && nowHour <= 16) {\n\t\t\treturn this.getAfternoonMessage();\n\t\t} else {\n\t\t\treturn this.getEveningMessage();\n\t\t}\n\t};\n\n\t// returns random  message\n\tgetNightMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\tgetMorningMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetAfternoonMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetEveningMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'}>\n\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tchangeColor={this.handleChangeColor}\n\t\t\t\t\t\t\tchangeColorDefault={this.handleChangeColorDefault}\n\t\t\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t\tgetGreeting={this.getGreeting}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t<ParkingInfoPage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}