{"version":3,"sources":["serviceWorker.js","components/HomePage/ColorOption/ColorOption.jsx","components/HomePage/ConfirmModal/ConfirmModal.jsx","components/HomePage/Footer/Footer.jsx","components/Header/Header.jsx","components/ColorBlindButton/ColorBlindButton.jsx","components/HomePage/HomePage.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/FullPSCardBody/FullPSCardBody.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSCard/PSCard.jsx","components/ParkingInfoPage/PSGroup3.0.0/PSGroup.jsx","components/ParkingInfoPage/Time/Time.jsx","components/ParkingInfoPage/OfflinePage/OfflinePage.jsx","components/ParkingInfoPage/ParkingInfoFooter/ParkingInfoFooter.jsx","components/ParkingInfoPage/ParkingInfoPage.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ColorOption","state","this","props","color","onClick","handleMouseOver","handleMouseLeave","Fragment","className","id","onMouseOver","onMouseLeave","colorBlindMode","charAt","toUpperCase","slice","Component","ConfirmModal","Modal","centered","show","showModal","onHide","onModalClose","animation","Header","closeButton","Body","Footer","to","process","Button","variant","onModalConfirm","href","rel","target","serverWarningAlert","Alert","style","textAlign","serverDownAlert","class","getServerTextFromProps","type","ColorBlindButton","colorBlindTooltipOpen","toggleColorBlindMode","setState","localStorage","setItem","toggleColorBlindTooltip","mouseHoverColorBlindIcon","mouseLeaveColorBlindIcon","data","getItem","Tooltip","placement","isOpen","toggle","Home","handleModalClose","handleModalShow","handleModalConfirm","changeColorDefault","onlineStatusLoaded","Spinner","role","onlineStatus","changeColor","onModalShow","FullPSCardBody","Card","padding","structure","PSCard","index","currentPermit","spots","level","handleIncrementIndex","handleDecrementIndex","updateCurrentPermit","dataArr","length","prevProps","prevState","PSGroup","structures","ps1","ps3","ps4","psGroupIsLoaded","handleHTTPGetPS","console","log","axios","get","then","res","status","updatePSFromHTTPResponse","catch","err","Object","entries","forEach","element","permit_category","permit","standardizeColorLongToShort","isRelevantColor","push","setPSGroupLoadedTrue","colorArr","indexOf","standardizeColorShortToLong","getSortedDataArr","preference","sortedDataArr","spotsWeight","colorWeight","map","weightedSpots","weightedColor","score","sort","a","b","range","i","timeUpdated","elapsedTime","ps1DataArr","ps3DataArr","ps4DataArr","Time","updateClientTimerInterval","timerIsLoaded","getTimeText","standardizeSecondsToMinutes","maxTime","calculatedTime","ps1TimeText","OfflinePage","ParkingInfoFooter","ParkingInfo","utc_updated_time","timerLoaded","psGroupLoaded","updateTimeUpdatedInState","value","time","Date","computeElapsedTime","nowTime","parseInt","handleHTTPGetUpdateTime","updateTimeFromHTTPResponse","handleResetElapsedTime","updateTimeUpdatedInStateInterval","setInterval","clearInterval","onResetElapsedTime","App","updateOnlineStatusInterval","onlineHours","fromHour","toHour","handleChangeColor","handleChangeColorDefault","updateOnlineStatus","checkOnlineStatus","nowHour","getHours","getGreeting","getNightMessage","getMorningMessage","getAfternoonMessage","getEveningMessage","exact","path","HomePage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dd74deaf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n// import { Tooltip } from \"react-bootstrap\";\n\nimport './ColorOptionStyle.css';\nimport '../../../styles/shared/Colors.css';\n\nclass ColorOption extends Component {\n\tstate = {};\n\n\trender() {\n\t\tconst { color, onClick, handleMouseOver, handleMouseLeave } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{color === 'grey' ? (\n\t\t\t\t\t<div className={color + '-background square'}></div>\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={'Tooltip-' + color}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonClick(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\t\thandleMouseOver(color);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\thandleMouseLeave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.props.colorBlindMode ? '' : color + '-background square pointer'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.colorBlindMode ? (\n\t\t\t\t\t\t\t<div className={'pointer border-' + color}>\n\t\t\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)} Permit\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorOption;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './ConfirmModal.css';\n\nfunction ConfirmModal(props) {\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tcentered={true}\n\t\t\t\tshow={props.showModal}\n\t\t\t\tonHide={props.onModalClose}\n\t\t\t\tanimation={true}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='modal-body-text'>\n\t\t\t\t\t\tYou have {props.color === 'orange' ? 'an' : 'a'} {props.color} permit?\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Link to={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\tclassName={props.color + '-button confirm-button'}\n\t\t\t\t\t\t\tonClick={props.onModalConfirm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className='fas fa-check fa-sm'></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default ConfirmModal;\n","import React, { Component } from 'react';\n\nimport './Footer.css';\n\nclass Footer extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='footer'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tMade with <i className='fas fa-heart'></i> by{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='https://github.com/lusterane'\n\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tToby\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport './Header.css';\n\nclass Header extends Component {\n\tstate = {};\n\n\tserverWarningAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='warning'>\n\t\t\t\t<i className='fas fa-exclamation-circle fa-lg'></i>\n\t\t\t\tTo conserve server loads, servers will rest outside of 8:00AM - 8:00PM CST\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tserverDownAlert = () => {\n\t\treturn (\n\t\t\t<Alert style={{ textAlign: 'center' }} variant='danger'>\n\t\t\t\t<i class='fas fa-exclamation-triangle fa-lg'></i>\n\t\t\t\tServers are down. I'm either broke or this is unexpected. Kindly{' '}\n\t\t\t\t<a href='mailto: tobychow98@gmail.com?subject=UTD Parking Assist: Website Issue'>\n\t\t\t\t\tcontact me\n\t\t\t\t</a>{' '}\n\t\t\t\tif it's the latter.\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\tgetServerTextFromProps = () => {\n\t\tconst { type } = this.props;\n\t\tif (type === 'server-warning') {\n\t\t\treturn this.serverWarningAlert();\n\t\t} else if (type === 'server-down') {\n\t\t\treturn this.serverDownAlert();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='header-container'>{this.getServerTextFromProps()}</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Tooltip } from 'reactstrap';\n\nimport './ColorBlindButton.css';\n\nclass ColorBlindButton extends Component {\n\tstate = {\n\t\tcolorBlindTooltipOpen: false,\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\ttoggleColorBlindMode = () => {\n\t\tthis.setState({ colorBlindMode: !this.state.colorBlindMode });\n\t\tlocalStorage.setItem('color-blind-status', !this.state.colorBlindMode);\n\t};\n\n\t/* TOOLTIPS */\n\ttoggleColorBlindTooltip = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: !this.state.colorBlindTooltipOpen });\n\t};\n\n\tmouseHoverColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: true });\n\t};\n\n\tmouseLeaveColorBlindIcon = () => {\n\t\tthis.setState({ colorBlindTooltipOpen: false });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tonClick={this.toggleColorBlindMode}\n\t\t\t\t\tid='color-blind'\n\t\t\t\t\tclassName='color-blind-container pointer'\n\t\t\t\t>\n\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t<i className='fas fa-low-vision fa-lg'></i>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<i className='fas fa-eye fa-lg'></i>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Tooltip\n\t\t\t\t\tplacement='left'\n\t\t\t\t\tisOpen={this.state.colorBlindTooltipOpen}\n\t\t\t\t\ttarget='color-blind'\n\t\t\t\t\ttoggle={this.toggleColorBlindTooltip}\n\t\t\t\t>\n\t\t\t\t\tColor Blind Accessability\n\t\t\t\t</Tooltip>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ColorBlindButton;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport ColorOption from './ColorOption/ColorOption';\nimport ConfirmModal from './ConfirmModal/ConfirmModal';\nimport Footer from './Footer/Footer';\nimport Header from '../Header/Header';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\n\nimport './HomePageStyle.css';\nimport '../../styles/shared/Colors.css';\nimport '../../styles/shared/LoadingSpinner.css';\n\nclass Home extends Component {\n\t//home\n\tstate = {\n\t\tshowModal: false,\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\thandleModalClose = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\thandleModalShow = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\n\thandleModalConfirm = () => {\n\t\tlocalStorage.setItem('color', this.props.color);\n\t\tthis.setState({ showModal: false });\n\t};\n\n\thandleMouseLeave = () => {\n\t\tif (!this.state.showModal) {\n\t\t\tthis.props.changeColorDefault();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.props.onlineStatusLoaded ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t<Spinner animation='border' role='status'>\n\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ColorBlindButton />\n\n\t\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\tUTD Parking\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<p>Live parking data at your fingertips</p>\n\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\n\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='gold'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='orange'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ColorOption\n\t\t\t\t\t\t\t\t\t\t\tcolor='purple'\n\t\t\t\t\t\t\t\t\t\t\tcolorBlindMode={this.state.colorBlindMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleModalShow(this.props.color);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseOver={this.props.changeColor}\n\t\t\t\t\t\t\t\t\t\t\thandleMouseLeave={this.handleMouseLeave}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\tcolor={this.props.color}\n\t\t\t\t\t\t\t\tshowModal={this.state.showModal}\n\t\t\t\t\t\t\t\tonModalShow={this.handleModalShow}\n\t\t\t\t\t\t\t\tonModalClose={this.handleModalClose}\n\t\t\t\t\t\t\t\tonModalConfirm={this.handleModalConfirm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Header type='server-warning'></Header>\n\t\t\t\t\t\t<div className='container homepage-container'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<h1 className={'grey title-greeting'}>UTD Parking</h1>\n\t\t\t\t\t\t\t\t\t{/* <h1 className={this.props.color + ' title-greeting'}>\n\t\t\t\t\t\t\t\t\t\t{this.props.getGreeting()}\n\t\t\t\t\t\t\t\t\t</h1> */}\n\t\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t\t<ColorOption color='grey' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t<Footer />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass FullPSCardBody extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<div className='ps-card-body' style={{ padding: '0rem 1.25rem' }}>\n\t\t\t\t\t\t<div className='text' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t<p className='main-text'>FULL</p>\n\t\t\t\t\t\t\t<p className='sub-text'>No available parking spots at this time</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t<p>{this.props.structure}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default FullPSCardBody;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport FullPSCardBody from './FullPSCardBody/FullPSCardBody.jsx';\n\nimport './PSCard.css';\nimport '../../../../styles/shared/Colors.css';\n\nclass PSCard extends Component {\n\tstate = {\n\t\tindex: 0,\n\t\tcurrentPermit: {\n\t\t\tid: -1,\n\t\t\tspots: -1,\n\t\t\tstructure: 'ps1',\n\t\t\tcolor: 'green',\n\t\t\tlevel: -1,\n\t\t},\n\t\tcolorBlindMode: false,\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.index !== this.state.index || prevProps !== this.props) {\n\t\t\tthis.updateCurrentPermit();\n\t\t}\n\n\t\t// get color blind status\n\t\tconst data = localStorage.getItem('color-blind-status') === 'true';\n\t\tif (this.state.colorBlindMode !== data) {\n\t\t\tthis.setState({ colorBlindMode: data });\n\t\t}\n\t}\n\n\thandleIncrementIndex = () => {\n\t\tthis.setState({ index: this.state.index + 1 });\n\t};\n\n\thandleDecrementIndex = () => {\n\t\tthis.setState({ index: this.state.index - 1 });\n\t};\n\n\tupdateCurrentPermit = () => {\n\t\tconst { id, spots, structure, color, level } =\n\t\t\tthis.props.dataArr.length !== 0\n\t\t\t\t? this.props.dataArr[this.state.index]\n\t\t\t\t: { id: -1, spots: -1, color: 'green', level: -1 };\n\n\t\tthis.setState({\n\t\t\tcurrentPermit: {\n\t\t\t\tid: id,\n\t\t\t\tspots: spots,\n\t\t\t\tstructure: structure,\n\t\t\t\tcolor: color,\n\t\t\t\tlevel: level,\n\t\t\t},\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { spots, structure, color, level } = this.state.currentPermit;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Card className='ps-card'>\n\t\t\t\t\t{this.props.dataArr.length !== 0 ? (\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t{this.state.index === 0 ? (\n\t\t\t\t\t\t\t\t<div className='text-muted ps-card-header'>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-star'></i> Recommended Choice\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div className='ps-card-body'>\n\t\t\t\t\t\t\t\t{this.state.index !== 0 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleDecrementIndex}\n\t\t\t\t\t\t\t\t\t\tclassName='pointer arrow-container'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-left'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className='text'>\n\t\t\t\t\t\t\t\t\t<p className='main-text'>{spots} SPOTS</p>\n\t\t\t\t\t\t\t\t\t<p className='sub-text'>Level {level}</p>\n\n\t\t\t\t\t\t\t\t\t{this.state.colorBlindMode ? (\n\t\t\t\t\t\t\t\t\t\t<p className={'sub-text border-' + color}>\n\t\t\t\t\t\t\t\t\t\t\t{color.charAt(0).toUpperCase() + color.slice(1)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p className='sub-text'>\n\t\t\t\t\t\t\t\t\t\t\tColor <i className={'fas fa-circle ' + color}></i>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{this.state.index !== this.props.dataArr.length - 1 ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleIncrementIndex}\n\t\t\t\t\t\t\t\t\t\tclassName='arrow-container pointer'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='arrow-container'>\n\t\t\t\t\t\t\t\t\t\t<i className='grey arrow fas fa-angle-right'></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='ps-card-footer'>\n\t\t\t\t\t\t\t\t<hr className='ps-card-hr'></hr>\n\t\t\t\t\t\t\t\t<p>{structure}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<FullPSCardBody structure={this.props.structure} />\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSCard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport PSCard from './PSCard/PSCard';\n\nimport './PSGroup.css';\n\nclass PSGroup extends Component {\n\tstate = {\n\t\tstructures: {\n\t\t\tps1: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tdataArr: [],\n\t\t\t},\n\t\t},\n\t\tcolor: '',\n\t\tpsGroupIsLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tconst data = localStorage.getItem('color');\n\t\tif (data) {\n\t\t\tthis.setState({ color: data });\n\t\t}\n\t\tthis.handleHTTPGetPS();\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// 63 64 65 66\n\t\t// inclusive\n\t\tconst range = [62, 63];\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.props.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleHTTPGetPS();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleHTTPGetPS = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/');\n\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updatePSFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/ ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdatePSFromHTTPResponse = (res) => {\n\t\tlet structures = { ...this.state.structures };\n\n\t\t// reset dataArr for each parking structure\n\t\tObject.entries(structures).forEach((element) => {\n\t\t\telement[1].dataArr = [];\n\t\t});\n\n\t\tres.data.forEach((element) => {\n\t\t\telement.permit_category.forEach((permit) => {\n\t\t\t\tconst { id, level, spots } = permit;\n\t\t\t\tconst color = this.standardizeColorLongToShort(permit.color);\n\n\t\t\t\tif (spots !== 0 && this.isRelevantColor(color)) {\n\t\t\t\t\tstructures[element.structure].dataArr.push({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\tspots: spots,\n\t\t\t\t\t\tstructure: element.structure.toUpperCase(),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.setState({ structures: structures });\n\t\tthis.props.setPSGroupLoadedTrue();\n\t};\n\n\tisRelevantColor = (color) => {\n\t\t// cut array to relavent colors\n\t\tlet colorArr = ['green', 'gold', 'orange', 'purple'];\n\t\tconst index = colorArr.indexOf(this.state.color) + 1;\n\t\tcolorArr = colorArr.slice(0, index);\n\n\t\t// check if color is in array\n\t\treturn colorArr.indexOf(color) > -1;\n\t};\n\n\t// returns standardized color. 'Green Permit' -> 'green'\n\tstandardizeColorLongToShort = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'Green Permit':\n\t\t\t\treturn 'green';\n\t\t\tcase 'Gold Permit':\n\t\t\t\treturn 'gold';\n\t\t\tcase 'Orange Permit':\n\t\t\t\treturn 'orange';\n\t\t\tcase 'Purple Permit':\n\t\t\t\treturn 'purple';\n\t\t\tcase 'Pay-By-Space':\n\t\t\t\treturn 'payBySpace';\n\t\t\tdefault:\n\t\t\t\treturn 'green';\n\t\t}\n\t};\n\n\tstandardizeColorShortToLong = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'green':\n\t\t\t\treturn 'Green%20Permit';\n\t\t\tcase 'gold':\n\t\t\t\treturn 'Gold%20Permit';\n\t\t\tcase 'orange':\n\t\t\t\treturn 'Orange%20Permit';\n\t\t\tcase 'purple':\n\t\t\t\treturn 'Purple%20Permit';\n\t\t\tcase 'pay-by-space':\n\t\t\t\treturn 'Pay-By-Space';\n\t\t\tdefault:\n\t\t\t\treturn 'Green%20Permit';\n\t\t}\n\t};\n\n\tgetSortedDataArr = (dataArr, preference) => {\n\t\tlet sortedDataArr = [...dataArr];\n\n\t\t// preference can be 'spots' or 'color'\n\t\tconst spotsWeight = preference === 'spots' ? 0.55 : 0.45;\n\t\tconst colorWeight = 1 - spotsWeight;\n\n\t\t// assign pref score\n\t\tsortedDataArr = sortedDataArr.map((element) => {\n\t\t\tconst weightedSpots = (element.spots / 250) * spotsWeight;\n\t\t\tlet weightedColor = 0;\n\t\t\tswitch (element.color) {\n\t\t\t\tcase 'purple':\n\t\t\t\t\tweightedColor = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orange':\n\t\t\t\t\tweightedColor = 0.75;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gold':\n\t\t\t\t\tweightedColor = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'green':\n\t\t\t\t\tweightedColor = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tweightedColor = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tweightedColor *= colorWeight;\n\t\t\treturn { ...element, score: weightedSpots + weightedColor };\n\t\t});\n\n\t\t// sort the array\n\t\tsortedDataArr.sort((a, b) => (a.score < b.score ? 1 : -1));\n\n\t\treturn sortedDataArr;\n\t};\n\n\trender() {\n\t\tconst { ps1, ps3, ps4 } = this.state.structures;\n\n\t\tconst ps1DataArr = this.getSortedDataArr(ps1.dataArr, 'spots');\n\t\tconst ps3DataArr = this.getSortedDataArr(ps3.dataArr, 'spots');\n\t\tconst ps4DataArr = this.getSortedDataArr(ps4.dataArr, 'spots');\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='card-group-container'>\n\t\t\t\t\t<PSCard dataArr={ps1DataArr} structure={'PS1'} />\n\t\t\t\t\t<PSCard dataArr={ps3DataArr} structure={'PS3'} />\n\t\t\t\t\t<PSCard dataArr={ps4DataArr} structure={'PS4'} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PSGroup;\n","import React, { Component } from 'react';\n\nimport './Time.css';\n\nclass Time extends Component {\n\tstate = {\n\t\tupdateClientTimerInterval: '',\n\t\ttimerIsLoaded: false,\n\t};\n\tgetTimeText = (elapsedTime) => {\n\t\tconst maxTime = 63;\n\t\tif (elapsedTime > maxTime) {\n\t\t\treturn 'Unknown problem, please refresh page';\n\t\t} else {\n\t\t\treturn 'Live update in ' + this.standardizeSecondsToMinutes(elapsedTime, maxTime);\n\t\t}\n\t};\n\n\tstandardizeSecondsToMinutes = (elapsedTime, maxTime) => {\n\t\tconst calculatedTime = maxTime - elapsedTime;\n\t\tif (calculatedTime < 60) {\n\t\t\tconst calculatedTime = maxTime - elapsedTime;\n\t\t\treturn calculatedTime + ' seconds';\n\t\t} else if (calculatedTime === 0 || calculatedTime >= 60) {\n\t\t\t// better ux. change if update is many seconds over minute\n\t\t\treturn 'less than 1 second';\n\t\t}\n\t};\n\n\trender() {\n\t\tconst ps1TimeText = this.getTimeText(this.props.timeUpdated.ps1.elapsedTime);\n\t\t// const ps3TimeText = this.getTimeText(this.props.timeUpdated.ps3.elapsedTime);\n\t\t// const ps4TimeText = this.getTimeText(this.props.timeUpdated.ps4.elapsedTime);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='time-text-container'>\n\t\t\t\t\t<div className='time-text'>{ps1TimeText}</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Time;\n","import React, { Component } from 'react';\n\nclass OfflinePage extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>it's offline broooo</h1>\n\t\t\t\t<h3>\n\t\t\t\t\tlike from 8am to 8pm broo <i className='fas fa-heart'></i>\n\t\t\t\t</h3>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default OfflinePage;\n","import React, { Component } from 'react';\n\nimport './ParkingInfoFooter.css';\n\nclass ParkingInfoFooter extends Component {\n\tstate = {};\n\trender() {\n\t\treturn <React.Fragment></React.Fragment>;\n\t}\n}\n\nexport default ParkingInfoFooter;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport axios from 'axios';\n\n//import ParkingStructureGroup from './ParkingStructureGroupv2/ParkingStructureGroupv2';\nimport ParkingStructureGroup from './PSGroup3.0.0/PSGroup';\nimport Time from './Time/Time';\nimport OfflinePage from './OfflinePage/OfflinePage';\nimport ParkingInfoFooter from './ParkingInfoFooter/ParkingInfoFooter';\nimport ColorBlindButton from '../ColorBlindButton/ColorBlindButton';\n\nimport '../../styles/shared/LoadingSpinner.css';\nimport './ParkingInfoPage.css';\n\nclass ParkingInfo extends Component {\n\tstate = {\n\t\ttimeUpdated: {\n\t\t\tps1: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps3: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t\tps4: {\n\t\t\t\tutc_updated_time: '',\n\t\t\t\telapsedTime: -1,\n\t\t\t},\n\t\t},\n\t\ttimerLoaded: false,\n\t\tpsGroupLoaded: false,\n\t\tonlineStatusLoaded: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tupdateTimeUpdatedInStateInterval: setInterval(this.updateTimeUpdatedInState, 1000),\n\t\t});\n\t\tthis.handleHTTPGetUpdateTime();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.updateTimeUpdatedInStateInterval);\n\t}\n\tcomponentDidUpdate() {\n\t\t// check time loaded\n\t\tif (this.state.timeUpdated.ps1.elapsedTime !== -1 && this.state.timerLoaded === false) {\n\t\t\tthis.setState({ timerLoaded: true });\n\t\t}\n\n\t\t// check online status loaded\n\t\tif (this.props.onlineStatusLoaded === true && this.state.onlineStatusLoaded === false) {\n\t\t\tthis.setState({ onlineStatusLoaded: true });\n\t\t}\n\n\t\t// 63 64 65 66\n\t\t// inclusive\n\t\tconst range = [62, 63];\n\t\t// 63, 64 working well 4/14 7:30~\n\t\t// 62, 63 working well 4/14 7:30~\n\t\t// 61, 62 working for most part. extremely minor hiccup 4/14 8:00~\n\t\t// 80 requests: 2 hiccups\n\t\t// 62, 63 working well 4/14 8:40~\n\t\t// 80 requests: NO hiccups\n\t\tfor (let i = range[0]; i <= range[1]; i++) {\n\t\t\tif (this.state.timeUpdated.ps1.elapsedTime === i) {\n\t\t\t\tthis.handleResetElapsedTime();\n\t\t\t\tthis.handleHTTPGetUpdateTime();\n\t\t\t}\n\t\t}\n\t}\n\n\t// updates elapsed time in state\n\tupdateTimeUpdatedInState = () => {\n\t\tif (this.props.onlineStatus) {\n\t\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\t\tObject.entries(this.state.timeUpdated).forEach((value) => {\n\t\t\t\tconst structure = value[0];\n\t\t\t\tconst time = new Date(value[1].utc_updated_time);\n\t\t\t\ttimeUpdated[structure].elapsedTime = this.computeElapsedTime(time);\n\t\t\t});\n\n\t\t\tthis.setState({ timeUpdated: timeUpdated });\n\t\t}\n\t};\n\n\tcomputeElapsedTime = (time) => {\n\t\tconst nowTime = new Date();\n\t\treturn parseInt((nowTime - time) / 1000, 10);\n\t};\n\n\thandleHTTPGetUpdateTime = () => {\n\t\tconsole.log('HTTP CALL: GET /parkingStructures/timeUpdated');\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_API_ENDPOINT + `parkingStructures/timeUpdated`)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tthis.updateTimeFromHTTPResponse(res);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('GET /parkingStructures/timeUpdated ' + res.status);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tupdateTimeFromHTTPResponse = (res) => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\tObject.entries(res.data).forEach((value) => {\n\t\t\tconst structure = value[0];\n\t\t\tconst time = new Date(value[1]);\n\t\t\ttimeUpdated[structure].utc_updated_time = time;\n\t\t});\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\t// avoid multiple API calls\n\thandleResetElapsedTime = () => {\n\t\tlet timeUpdated = { ...this.state.timeUpdated };\n\t\ttimeUpdated['ps1'].elapsedTime = 0;\n\t\ttimeUpdated['ps3'].elapsedTime = 0;\n\t\ttimeUpdated['ps4'].elapsedTime = 0;\n\t\tthis.setState({ timeUpdated: timeUpdated });\n\t};\n\n\tsetPSGroupLoadedTrue = () => {\n\t\tthis.setState({ psGroupLoaded: true });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='parking-info-page-container'>\n\t\t\t\t\t{this.state.onlineStatusLoaded &&\n\t\t\t\t\tthis.state.timerLoaded &&\n\t\t\t\t\tthis.state.psGroupLoaded ? (\n\t\t\t\t\t\t''\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='spinner-container'>\n\t\t\t\t\t\t\t\t<Spinner animation='border' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.props.onlineStatus ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<ColorBlindButton />\n\t\t\t\t\t\t\t<div className='parking-info-container'>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={process.env.PUBLIC_URL + '/'}\n\t\t\t\t\t\t\t\t\tclassName='remove-decoration'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className='fas fa-chevron-left back-route-button'></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<Time timeUpdated={this.state.timeUpdated} />\n\t\t\t\t\t\t\t\t<ParkingStructureGroup\n\t\t\t\t\t\t\t\t\tsetPSGroupLoadedTrue={this.setPSGroupLoadedTrue}\n\t\t\t\t\t\t\t\t\ttimeUpdated={this.state.timeUpdated}\n\t\t\t\t\t\t\t\t\tonResetElapsedTime={this.handleResetElapsedTime}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ParkingInfoFooter />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<OfflinePage />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ParkingInfo;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport ParkingInfoPage from './components/ParkingInfoPage/ParkingInfoPage';\n\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tcolor: '',\n\t\tupdateOnlineStatusInterval: '',\n\t\tonlineHours: {\n\t\t\tfromHour: '8',\n\t\t\ttoHour: '20',\n\t\t},\n\n\t\tonlineStatus: false,\n\t\tonlineStatusLoaded: false,\n\t};\n\tcomponentDidMount() {\n\t\tthis.setState({ updateOnlineStatusInterval: setInterval(this.updateOnlineStatus, 900) });\n\t}\n\n\t// permit color\n\thandleChangeColor = (color) => {\n\t\tthis.setState({ color: color });\n\t};\n\n\thandleChangeColorDefault = () => {\n\t\tthis.setState({ color: '' });\n\t};\n\n\t// update time\n\tupdateOnlineStatus = () => {\n\t\tif (this.checkOnlineStatus()) {\n\t\t\tthis.setState({ onlineStatus: true });\n\t\t} else {\n\t\t\tthis.setState({ onlineStatus: false });\n\t\t}\n\t\tthis.setState({ onlineStatusLoaded: true });\n\t};\n\n\tcheckOnlineStatus = () => {\n\t\tconst nowHour = new Date().getHours();\n\t\tconst { fromHour, toHour } = this.state.onlineHours;\n\t\tif (nowHour >= fromHour && nowHour < toHour) {\n\t\t\t// online\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetGreeting = () => {\n\t\tconst nowHour = new Date().getHours();\n\n\t\t// Night: [20-23], [0 or 24 - 5]\n\t\t// Morning: [6-11]\n\t\t// Afternoon: [12-16]\n\t\t// Evening: [17-19] evening\n\t\tif (\n\t\t\t(nowHour >= 20 && nowHour <= 23) ||\n\t\t\t((nowHour === 0 || nowHour === 24) && nowHour <= 5)\n\t\t) {\n\t\t\treturn this.getNightMessage();\n\t\t} else if (nowHour >= 6 && nowHour <= 11) {\n\t\t\treturn this.getMorningMessage();\n\t\t} else if (nowHour >= 12 && nowHour <= 16) {\n\t\t\treturn this.getAfternoonMessage();\n\t\t} else {\n\t\t\treturn this.getEveningMessage();\n\t\t}\n\t};\n\n\t// returns random  message\n\tgetNightMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\tgetMorningMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetAfternoonMessage = () => {\n\t\treturn <i className='fas fa-sun'></i>;\n\t};\n\tgetEveningMessage = () => {\n\t\treturn <i className='fas fa-moon'></i>;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + '/'}>\n\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tchangeColor={this.handleChangeColor}\n\t\t\t\t\t\t\tchangeColorDefault={this.handleChangeColorDefault}\n\t\t\t\t\t\t\tcolor={this.state.color}\n\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t\tgetGreeting={this.getGreeting}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={process.env.PUBLIC_URL + '/parkingInfoPage'}>\n\t\t\t\t\t\t<ParkingInfoPage\n\t\t\t\t\t\t\tonlineStatus={this.state.onlineStatus}\n\t\t\t\t\t\t\tonlineStatusLoaded={this.state.onlineStatusLoaded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}